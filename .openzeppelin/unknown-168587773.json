{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xEB27B05178515c7E6E51dEE159c8487A011ac030",
    "txHash": "0xdd008bd9c0133586f968102a57cc024c687917a650c332a073808d49e6f6d5a2"
  },
  "proxies": [
    {
      "address": "0x20E58fC5E1ee3C596fb3ebD6de6040e7800e82E6",
      "txHash": "0x08e440c5f00c7f497179a046dd941c5d056efb862140b3159ac807c356ae738f",
      "kind": "transparent"
    },
    {
      "address": "0x8D715a015aC0e064a3Cfb88DA755d346Aee65433",
      "txHash": "0x426353af4e4aeceadf1b85141db22baf3a62b4550359dac06345c446facaf8d2",
      "kind": "transparent"
    },
    {
      "address": "0x4Dc3c929DDa7451012F408d1f376221621dD2a56",
      "txHash": "0xa1300cb24ab2f59a32a24f6157742974f4835c45d2cb41c1a9406030428a9d21",
      "kind": "transparent"
    },
    {
      "address": "0x029c919Cf951C588819Acb7d95eeC1780E53f89C",
      "txHash": "0x4c804127ec73ea2477a213d3a53072a0b65d0c9aa88ad5f98e7b9b104cd81b7c",
      "kind": "transparent"
    },
    {
      "address": "0xCB1EaA1E9Fd640c3900a4325440c80FEF4b1b16d",
      "txHash": "0x6c7e23aa9ee077c9e91da6d1d6c7c6bb8c436f335e8e9016ce7e050bc6e3a3f2",
      "kind": "transparent"
    },
    {
      "address": "0x3f78cEc168AdF9242a3d2F04A0ab1E312c26b3Ec",
      "txHash": "0xbabefb94f277afd17c5b02015e864bd5c7f7cf6914d90a314cb0221f39a03822",
      "kind": "transparent"
    },
    {
      "address": "0xf944690f3B7436161BA27B47799Bd06EA4154C0e",
      "txHash": "0x7a95eb706da5298f21cd8102cd768e326c34d5cc09cd2345f06992a8488e8a71",
      "kind": "transparent"
    },
    {
      "address": "0xA227221350f1D0Ca119be424710aCD9df89151c3",
      "txHash": "0x81017a30e7dbe456c1f6e15487beacf792429080542990c3beb5f36f1caf200c",
      "kind": "transparent"
    },
    {
      "address": "0x35A301796949f5235f8fc3311E6013450aaf2354",
      "txHash": "0xefebe4d279c2fd77b302cb4b21f346e985c2fcc1b2cc7f37dea199cfac694435",
      "kind": "transparent"
    },
    {
      "address": "0xC98966b9A3236e4d82FBcDe94f0Df257b5033c4C",
      "txHash": "0x68dcc3a22f971a09c8320a3a85d9ab88aa6b25ab177618d2e53da91f3465b609",
      "kind": "transparent"
    },
    {
      "address": "0xFd89a05652492D748a94cD24c636e33054E9F4c2",
      "txHash": "0x4eecf37fddedafbbf34e88ab9cd8340232e4a53320f5894f78a0c1ec7a354831",
      "kind": "transparent"
    },
    {
      "address": "0x34eFfFEdbD326796256B4C253dC3F8F1dfe23D63",
      "txHash": "0x6a372cec87160549137fdc1889e615d582c6a90fd67812e0663c17f5c20cdb14",
      "kind": "transparent"
    },
    {
      "address": "0xb4D3b20c2AF9dB32ef86f301F1CD4B5E92b1D1e1",
      "txHash": "0xe4b912e743b4d8369c8cf57c7e4c6a4606f4a87e77b1291d3d1849c90b54220c",
      "kind": "transparent"
    },
    {
      "address": "0x230764c6c192C0313bea5E5fa7118Fb46268443c",
      "txHash": "0x707883bf6e6e1fa846eccd6c80a9b2da74565fcdc3226f1e559525572f8f5573",
      "kind": "transparent"
    },
    {
      "address": "0x74eb4E1c2D836e10E0F89cbf9D3C9C38C491c7eF",
      "txHash": "0xd7348fc49f5d74ddaa234825fb3b24e28f0cf478da05fc8cad20ce0c9799b1cd",
      "kind": "transparent"
    },
    {
      "address": "0xC4F51bc480154e5B270967C70B64b53d0C189079",
      "txHash": "0xe13280b53f52fefa6bf5922d728c1b804769f24caa8a742cca16447a2eb13179",
      "kind": "transparent"
    },
    {
      "address": "0xFc99D238c7A20895ba3756Ee04FD8BfD442c18fD",
      "txHash": "0x3ce16d0c1c26724cd8f3b293a477263997c40f6b10257476346ad71264cefb21",
      "kind": "transparent"
    },
    {
      "address": "0xF1b49fd29240a6f91988f18322e7851cB9a88BEe",
      "txHash": "0x9597546cd1982efdd33f841f02df9bb0b8fdb34a73a9b80ad8be29c282168e30",
      "kind": "transparent"
    },
    {
      "address": "0xd408a7CFA86e1fa233037970F6CDfCA7d753067e",
      "txHash": "0x7255a244aac0bb13307224d376f5fb819b876ffc5c4430fa0341a830f9c10f92",
      "kind": "transparent"
    },
    {
      "address": "0xe821824C8DE790283f86ac8bFddE759009485288",
      "txHash": "0x8eb2c88b219f09862a9afa8617d818de4949424fb9c8aeca663f51d29b7ac57f",
      "kind": "transparent"
    },
    {
      "address": "0x7a85b2030cFbC3B6766efD8238Bf2E0066419051",
      "txHash": "0xf54fed041dc50d6926415f9786670bd675eb9949eb9401ab3a85c789083d8f72",
      "kind": "transparent"
    },
    {
      "address": "0x4353676051098d1a7893879Eb2Dae1955066aFc9",
      "txHash": "0xdb90738cbc0d8df62927b5174956f464c12785c15f25b15ce9902ad25c59dba6",
      "kind": "transparent"
    },
    {
      "address": "0x79e2C55904F4812Fd118A0922165610Ef57054a6",
      "txHash": "0x58539cf7e66a0144566331a14256b6a905832f8020350bb783018f18d51f810a",
      "kind": "transparent"
    },
    {
      "address": "0xf38ae72A0157B90D19eA577a5b695D2bc5D0e132",
      "txHash": "0xcc9c1adda49dfb6aa2325064effbd5044ab45a6afed99f723bb84acb9593be03",
      "kind": "transparent"
    }
  ],
  "impls": {
    "8f1b61670603faac415cc98d7113e22ea9850f1437c3433808fc309557ffdca3": {
      "address": "0xB853c09b6d03098b841300daD57701ABcFA80228",
      "txHash": "0x1edf5360372d783ea790185f99810793348251927f9274928983b19b1356aed1",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IReadablePyth)54509",
            "contract": "PythAdapter",
            "src": "src/oracles/PythAdapter.sol:21"
          },
          {
            "label": "configs",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_bytes32,t_struct(PythPriceConfig)54461_storage)",
            "contract": "PythAdapter",
            "src": "src/oracles/PythAdapter.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IReadablePyth)54509": {
            "label": "contract IReadablePyth",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_struct(PythPriceConfig)54461_storage)": {
            "label": "mapping(bytes32 => struct IPythAdapter.PythPriceConfig)",
            "numberOfBytes": "32"
          },
          "t_struct(PythPriceConfig)54461_storage": {
            "label": "struct IPythAdapter.PythPriceConfig",
            "members": [
              {
                "label": "pythPriceId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "inverse",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "112fccf81852ba0a0c671b3429474940a3a3afd58d397ba1ffa37040a6424514": {
      "address": "0x4c08D11Bc95075AD992Bd7A5776D0D9813E264d5",
      "txHash": "0xf329f3a37a4aff48e2b6885dcd684b726e96b908e7d574ea928b34405f7009e7",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "isUpdater",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "OracleMiddleware",
            "src": "src/oracles/OracleMiddleware.sol:50"
          },
          {
            "label": "assetPriceConfigs",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_bytes32,t_struct(AssetPriceConfig)49412_storage)",
            "contract": "OracleMiddleware",
            "src": "src/oracles/OracleMiddleware.sol:51"
          },
          {
            "label": "marketStatus",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "contract": "OracleMiddleware",
            "src": "src/oracles/OracleMiddleware.sol:63"
          },
          {
            "label": "maxTrustPriceAge",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "OracleMiddleware",
            "src": "src/oracles/OracleMiddleware.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AssetPriceConfig)49412_storage)": {
            "label": "mapping(bytes32 => struct OracleMiddleware.AssetPriceConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)",
            "numberOfBytes": "32"
          },
          "t_struct(AssetPriceConfig)49412_storage": {
            "label": "struct OracleMiddleware.AssetPriceConfig",
            "members": [
              {
                "label": "trustPriceAge",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "confidenceThresholdE6",
                "type": "t_uint32",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "adapter",
                "type": "t_address",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d1aa1961ddc75a4c3ca7e5d951a9b682c4594c1a39ea203e0a2ae2a43e13c38e": {
      "address": "0x7AAF085e43f059105F7e1ECc525E8142fF962159",
      "txHash": "0xd8fafb36fe27cc2d1a0980375a41bb17c234bdecc01219bd40050f911a8caacf",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "liquidityConfig",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(LiquidityConfig)75821_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:63"
          },
          {
            "label": "swapConfig",
            "offset": 0,
            "slot": "103",
            "type": "t_struct(SwapConfig)75826_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:64"
          },
          {
            "label": "tradingConfig",
            "offset": 0,
            "slot": "104",
            "type": "t_struct(TradingConfig)75835_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:65"
          },
          {
            "label": "liquidationConfig",
            "offset": 0,
            "slot": "107",
            "type": "t_struct(LiquidationConfig)75838_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:66"
          },
          {
            "label": "allowedLiquidators",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:68"
          },
          {
            "label": "serviceExecutors",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:69"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:71"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:72"
          },
          {
            "label": "hlp",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:73"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "113",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:74"
          },
          {
            "label": "pnlFactorBPS",
            "offset": 20,
            "slot": "113",
            "type": "t_uint32",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:75"
          },
          {
            "label": "minimumPositionSize",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:76"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "115",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:77"
          },
          {
            "label": "sglp",
            "offset": 0,
            "slot": "116",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:78"
          },
          {
            "label": "tokenAssetIds",
            "offset": 0,
            "slot": "117",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:81"
          },
          {
            "label": "assetConfigs",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_bytes32,t_struct(AssetConfig)75752_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:83"
          },
          {
            "label": "hlpAssetIds",
            "offset": 0,
            "slot": "119",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:85"
          },
          {
            "label": "assetHlpTokenConfigs",
            "offset": 0,
            "slot": "120",
            "type": "t_mapping(t_bytes32,t_struct(HLPTokenConfig)75761_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:86"
          },
          {
            "label": "collateralAssetIds",
            "offset": 0,
            "slot": "121",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:88"
          },
          {
            "label": "assetCollateralTokenConfigs",
            "offset": 0,
            "slot": "122",
            "type": "t_mapping(t_bytes32,t_struct(CollateralTokenConfig)75768_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:89"
          },
          {
            "label": "marketConfigs",
            "offset": 0,
            "slot": "123",
            "type": "t_array(t_struct(MarketConfig)75799_storage)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:91"
          },
          {
            "label": "assetClassConfigs",
            "offset": 0,
            "slot": "124",
            "type": "t_array(t_struct(AssetClassConfig)75802_storage)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:92"
          },
          {
            "label": "tradeServiceHooks",
            "offset": 0,
            "slot": "125",
            "type": "t_array(t_address)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:93"
          },
          {
            "label": "configExecutors",
            "offset": 0,
            "slot": "126",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:95"
          },
          {
            "label": "switchCollateralRouter",
            "offset": 0,
            "slot": "127",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:97"
          },
          {
            "label": "minProfitDurations",
            "offset": 0,
            "slot": "128",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:99"
          },
          {
            "label": "isAdaptiveFeeEnabledByMarketIndex",
            "offset": 0,
            "slot": "129",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:101"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(AssetClassConfig)75802_storage)dyn_storage": {
            "label": "struct IConfigStorage.AssetClassConfig[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MarketConfig)75799_storage)dyn_storage": {
            "label": "struct IConfigStorage.MarketConfig[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AssetConfig)75752_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.AssetConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(CollateralTokenConfig)75768_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.CollateralTokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(HLPTokenConfig)75761_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.HLPTokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AssetClassConfig)75802_storage": {
            "label": "struct IConfigStorage.AssetClassConfig",
            "members": [
              {
                "label": "baseBorrowingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(AssetConfig)75752_storage": {
            "label": "struct IConfigStorage.AssetConfig",
            "members": [
              {
                "label": "tokenAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "assetId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "decimals",
                "type": "t_uint8",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isStableCoin",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(CollateralTokenConfig)75768_storage": {
            "label": "struct IConfigStorage.CollateralTokenConfig",
            "members": [
              {
                "label": "settleStrategy",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "collateralFactorBPS",
                "type": "t_uint32",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "accepted",
                "type": "t_bool",
                "offset": 24,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FundingRate)75773_storage": {
            "label": "struct IConfigStorage.FundingRate",
            "members": [
              {
                "label": "maxSkewScaleUSD",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxFundingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(HLPTokenConfig)75761_storage": {
            "label": "struct IConfigStorage.HLPTokenConfig",
            "members": [
              {
                "label": "targetWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "bufferLiquidity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxWeightDiff",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "accepted",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(LiquidationConfig)75838_storage": {
            "label": "struct IConfigStorage.LiquidationConfig",
            "members": [
              {
                "label": "liquidationFeeUSDE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LiquidityConfig)75821_storage": {
            "label": "struct IConfigStorage.LiquidityConfig",
            "members": [
              {
                "label": "hlpTotalTokenWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "hlpSafetyBufferBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taxFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "flashLoanFeeRateBPS",
                "type": "t_uint32",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "maxHLPUtilizationBPS",
                "type": "t_uint32",
                "offset": 12,
                "slot": "1"
              },
              {
                "label": "depositFeeRateBPS",
                "type": "t_uint32",
                "offset": 16,
                "slot": "1"
              },
              {
                "label": "withdrawFeeRateBPS",
                "type": "t_uint32",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "dynamicFeeEnabled",
                "type": "t_bool",
                "offset": 24,
                "slot": "1"
              },
              {
                "label": "enabled",
                "type": "t_bool",
                "offset": 25,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MarketConfig)75799_storage": {
            "label": "struct IConfigStorage.MarketConfig",
            "members": [
              {
                "label": "assetId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxLongPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxShortPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "increasePositionFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "decreasePositionFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "3"
              },
              {
                "label": "initialMarginFractionBPS",
                "type": "t_uint32",
                "offset": 8,
                "slot": "3"
              },
              {
                "label": "maintenanceMarginFractionBPS",
                "type": "t_uint32",
                "offset": 12,
                "slot": "3"
              },
              {
                "label": "maxProfitRateBPS",
                "type": "t_uint32",
                "offset": 16,
                "slot": "3"
              },
              {
                "label": "assetClass",
                "type": "t_uint8",
                "offset": 20,
                "slot": "3"
              },
              {
                "label": "allowIncreasePosition",
                "type": "t_bool",
                "offset": 21,
                "slot": "3"
              },
              {
                "label": "active",
                "type": "t_bool",
                "offset": 22,
                "slot": "3"
              },
              {
                "label": "fundingRate",
                "type": "t_struct(FundingRate)75773_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(SwapConfig)75826_storage": {
            "label": "struct IConfigStorage.SwapConfig",
            "members": [
              {
                "label": "stablecoinSwapFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "swapFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TradingConfig)75835_storage": {
            "label": "struct IConfigStorage.TradingConfig",
            "members": [
              {
                "label": "fundingInterval",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "minProfitDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "devFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxPosition",
                "type": "t_uint8",
                "offset": 4,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d23fda4d90eb8e43d05697d543505b00b5566ecdb685cbec8872eff94eac7677": {
      "address": "0x417B34E90990657BF6adC1Ecc2ac4B36069cc927",
      "txHash": "0xf2a4845d48cb9aab2775289e9eca3c0e8c83152bad39921beaa1ef5a250c35e0",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "globalState",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(GlobalState)76652_storage",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:36"
          },
          {
            "label": "positions",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_struct(Position)76707_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:38"
          },
          {
            "label": "subAccountPositionIds",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:39"
          },
          {
            "label": "subAccountBorrowingFee",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:40"
          },
          {
            "label": "markets",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_struct(Market)76686_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:41"
          },
          {
            "label": "assetClasses",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_uint256,t_struct(AssetClass)76663_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:42"
          },
          {
            "label": "serviceExecutors",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:43"
          },
          {
            "label": "activePositionIds",
            "offset": 0,
            "slot": "158",
            "type": "t_struct(Bytes32Set)10900_storage",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:45"
          },
          {
            "label": "activeSubAccounts",
            "offset": 0,
            "slot": "160",
            "type": "t_struct(AddressSet)11021_storage",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:46"
          },
          {
            "label": "epochVolumeBuy",
            "offset": 0,
            "slot": "162",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:48"
          },
          {
            "label": "epochVolumeSell",
            "offset": 0,
            "slot": "163",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:49"
          },
          {
            "label": "movingWindowLength",
            "offset": 0,
            "slot": "164",
            "type": "t_uint256",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:50"
          },
          {
            "label": "movingWindowInterval",
            "offset": 0,
            "slot": "165",
            "type": "t_uint256",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Position)76707_storage)": {
            "label": "mapping(bytes32 => struct IPerpStorage.Position)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AssetClass)76663_storage)": {
            "label": "mapping(uint256 => struct IPerpStorage.AssetClass)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Market)76686_storage)": {
            "label": "mapping(uint256 => struct IPerpStorage.Market)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)11021_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10706_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(AssetClass)76663_storage": {
            "label": "struct IPerpStorage.AssetClass",
            "members": [
              {
                "label": "reserveValueE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sumBorrowingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastBorrowingTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "sumBorrowingFeeE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "sumSettledBorrowingFeeE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Bytes32Set)10900_storage": {
            "label": "struct EnumerableSet.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10706_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(GlobalState)76652_storage": {
            "label": "struct IPerpStorage.GlobalState",
            "members": [
              {
                "label": "reserveValueE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Market)76686_storage": {
            "label": "struct IPerpStorage.Market",
            "members": [
              {
                "label": "longPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "longAccumSE",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "longAccumS2E",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "shortPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "shortAccumSE",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "shortAccumS2E",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "currentFundingRate",
                "type": "t_int256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "lastFundingTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "accumFundingLong",
                "type": "t_int256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "accumFundingShort",
                "type": "t_int256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "fundingAccrued",
                "type": "t_int256",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Position)76707_storage": {
            "label": "struct IPerpStorage.Position",
            "members": [
              {
                "label": "primaryAccount",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "marketIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "avgEntryPriceE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "entryBorrowingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "reserveValueE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lastIncreaseTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "positionSizeE30",
                "type": "t_int256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "realizedPnl",
                "type": "t_int256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "lastFundingAccrued",
                "type": "t_int256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Set)10706_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e7a1d4f502eb4b0cc1043525aff02d40d14fc04ee4fcd86dbbef9f965cb23bb5": {
      "address": "0x995F553c6EF760ACB6EED102b376c3f159014e3c",
      "txHash": "0x0100f32aa045752e7f5f856e4ffb5ecd040fd772846863ed09a6e5585a02c803",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "154",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "155",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "minters",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "HLP",
            "src": "src/contracts/HLP.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f2712e80a726c62b5009ae60548e4e155bb6d1689ba4b8c83df07810ce03ce64": {
      "address": "0x28826219ffb76aa41a56a40e875709391795e512",
      "txHash": "0x9a80d26fdc9a4b9ed173cadac73b816f60aeb49ef4feed798053dad41c6a302f",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "totalAmount",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:47"
          },
          {
            "label": "hlpLiquidity",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:48"
          },
          {
            "label": "protocolFees",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:49"
          },
          {
            "label": "hlpLiquidityDebtUSDE30",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:51"
          },
          {
            "label": "fundingFeeReserve",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:52"
          },
          {
            "label": "devFees",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:54"
          },
          {
            "label": "tradingFeeDebt",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:56"
          },
          {
            "label": "borrowingFeeDebt",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:57"
          },
          {
            "label": "fundingFeeDebt",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:58"
          },
          {
            "label": "lossDebt",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:59"
          },
          {
            "label": "globalTradingFeeDebt",
            "offset": 0,
            "slot": "161",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:61"
          },
          {
            "label": "globalBorrowingFeeDebt",
            "offset": 0,
            "slot": "162",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:62"
          },
          {
            "label": "globalFundingFeeDebt",
            "offset": 0,
            "slot": "163",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:63"
          },
          {
            "label": "globalLossDebt",
            "offset": 0,
            "slot": "164",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:64"
          },
          {
            "label": "traderBalances",
            "offset": 0,
            "slot": "165",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:67"
          },
          {
            "label": "traderTokens",
            "offset": 0,
            "slot": "166",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:69"
          },
          {
            "label": "strategyAllowances",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:71"
          },
          {
            "label": "serviceExecutors",
            "offset": 0,
            "slot": "168",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:73"
          },
          {
            "label": "strategyFunctionSigAllowances",
            "offset": 0,
            "slot": "169",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bytes4))",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:75"
          },
          {
            "label": "hlpLiquidityOnHold",
            "offset": 0,
            "slot": "170",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:77"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes4)": {
            "label": "mapping(address => bytes4)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bytes4))": {
            "label": "mapping(address => mapping(address => bytes4))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0dbf7eb246876702ce56d7684aa3f82632203f90143e0f02a1be13638207be00": {
      "address": "0x68DaEB1C169d16395Bd03C2d0776A3e54015323e",
      "txHash": "0x33f9c5d08580107758265d65cae178570e29bb9c5b78a713d44a047fe7d3aa60",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:46"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:47"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:48"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:49"
          },
          {
            "label": "tradeHelper",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "656cd8bd70758c6f4f737925a44101193ed19948c208838e744b096796193619": {
      "address": "0x8a30913D47FeD617778058201846f5326bC9e65D",
      "txHash": "0x12e1548c0f02456d57ae171d62ba1449d1947501aed5455bcf8131b7b4314ba2",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:172"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:173"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:174"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(Calculator)16971",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:175"
          },
          {
            "label": "orderbookOracle",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(OrderbookOracle)51220",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:176"
          },
          {
            "label": "adaptiveFeeCalculator",
            "offset": 0,
            "slot": "156",
            "type": "t_contract(AdaptiveFeeCalculator)13200",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:177"
          },
          {
            "label": "maxAdaptiveFeeBps",
            "offset": 20,
            "slot": "156",
            "type": "t_uint32",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:178"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AdaptiveFeeCalculator)13200": {
            "label": "contract AdaptiveFeeCalculator",
            "numberOfBytes": "20"
          },
          "t_contract(Calculator)16971": {
            "label": "contract Calculator",
            "numberOfBytes": "20"
          },
          "t_contract(OrderbookOracle)51220": {
            "label": "contract OrderbookOracle",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "246ca300c09a912c8bfcfc4221785f432774123d6c2ed63af17ff9980c1a8b04": {
      "address": "0xDfc82d68Bb9B715a7DDFE80F2074E86958129B18",
      "txHash": "0x5b143ed1d968785f825bb216d287a6b4e84d4de9dd726d3e2182d3b73701af52",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:81"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:82"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:83"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:84"
          },
          {
            "label": "tradeHelper",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6b26dcc867af86e9f90526b2bc12af2bc31a326b3900321bcfca1416aa051c77": {
      "address": "0x97337D7F0d90dC766D7D452B677F95197dAe494f",
      "txHash": "0x31fa51935e7768df08e73baee297514e2bd447192d325ded59dce9e0d6fddec6",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:105"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:106"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:107"
          },
          {
            "label": "tradeHelper",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:108"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(Calculator)16971",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:109"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Calculator)16971": {
            "label": "contract Calculator",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "288f5adfccacedbc37c4a46049de0b6e7c141bedc0cc86faf056244e69ad0392": {
      "address": "0xE24748F48640A04d0996B8EB92900Fe5bD11E2e1",
      "txHash": "0xcbea269ee47a23f51fe3dbf0bbd40611baaaa285527ffbb8eeb2e3ba3052bad4",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "LiquidityService",
            "src": "src/services/LiquidityService.sol:77"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LiquidityService",
            "src": "src/services/LiquidityService.sol:78"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "LiquidityService",
            "src": "src/services/LiquidityService.sol:79"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ab789b46099b58cdbc94b7dcadf2235ac43e04ea45d9d4c5bff3f1806ee42fbb": {
      "address": "0xEf06f7a07400dcb66deC083568E6De341Fd3E642",
      "txHash": "0x885e3e0b46fc304a0d40fb269de61f04ace69b5c991dbd4c0d6e0c8233ec7ee5",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:173"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:174"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:175"
          },
          {
            "label": "tradeHelper",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:176"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(ICalculator)17893",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:177"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ICalculator)17893": {
            "label": "contract ICalculator",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0648b6d0b66eb4ef7fbd4d8651a9b7ff98facfa3bfcc9d55bcb8f752932eff06": {
      "address": "0xAaDc4f7C113679ba1e997D45cd6524599F0bB6AE",
      "txHash": "0xdef2bd261ef7caf708765f7107b9a04f11d5b198248a31f34956ba745d628074",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "positionManagers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:74"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:75"
          },
          {
            "label": "liquidationService",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:76"
          },
          {
            "label": "crossMarginService",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:77"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:78"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "9c592a99cc680e95fb2e34d962893ea1f5bd6fe6d89d329adbb0b1c9a101f6f9": {
      "address": "0x9abDC95bfc8A3Ca274e8a9B9a31297023a061bE8",
      "txHash": "0x977782a50fdf04f1e9bce7c4745288b0bb55a497b08ea373ab98322584992331",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "crossMarginService",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:92"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:93"
          },
          {
            "label": "nextExecutionOrderIndex",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:94"
          },
          {
            "label": "minExecutionOrderFee",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:95"
          },
          {
            "label": "maxExecutionChuck",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:96"
          },
          {
            "label": "withdrawOrders",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_struct(WithdrawOrder)35399_storage)dyn_storage",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:98"
          },
          {
            "label": "subAccountExecutedWithdrawOrders",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_array(t_struct(WithdrawOrder)35399_storage)dyn_storage)",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:99"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:100"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(WithdrawOrder)35399_storage)dyn_storage": {
            "label": "struct ICrossMarginHandler.WithdrawOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CrossMarginService)57615": {
            "label": "contract CrossMarginService",
            "numberOfBytes": "20"
          },
          "t_enum(WithdrawOrderStatus)35374": {
            "label": "enum ICrossMarginHandler.WithdrawOrderStatus",
            "members": [
              "PENDING",
              "SUCCESS",
              "FAIL"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(WithdrawOrder)35399_storage)dyn_storage)": {
            "label": "mapping(address => struct ICrossMarginHandler.WithdrawOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawOrder)35399_storage": {
            "label": "struct ICrossMarginHandler.WithdrawOrder",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint48",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "executedTimestamp",
                "type": "t_uint48",
                "offset": 6,
                "slot": "3"
              },
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 12,
                "slot": "3"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "crossMarginService",
                "type": "t_contract(CrossMarginService)57615",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "status",
                "type": "t_enum(WithdrawOrderStatus)35374",
                "offset": 21,
                "slot": "5"
              },
              {
                "label": "shouldUnwrap",
                "type": "t_bool",
                "offset": 22,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "10fbcfbdf1a1005e49aff117e9f7ffb2087c91e9b4d6b5ee45351df2a3ba1b19": {
      "address": "0x2BBFD6845156845f1f6BB37D91519C2c1c2E2C85",
      "txHash": "0x088dd5f03c7e75209fdcd4bb8ca53ff1c8861857609cd782253a6c08a5952f53",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(VaultStorage)75444",
            "contract": "GasService",
            "src": "src/services/GasService.sol:21"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(ConfigStorage)72702",
            "contract": "GasService",
            "src": "src/services/GasService.sol:22"
          },
          {
            "label": "executionFeeInUsd",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "GasService",
            "src": "src/services/GasService.sol:23"
          },
          {
            "label": "executionFeeTreasury",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "GasService",
            "src": "src/services/GasService.sol:24"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ConfigStorage)72702": {
            "label": "contract ConfigStorage",
            "numberOfBytes": "20"
          },
          "t_contract(VaultStorage)75444": {
            "label": "contract VaultStorage",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bcbd86c5ddd129003aa1992dfcef7ec38ab0f6ad01c17f4a2242a2afb06cab40": {
      "address": "0x6c099BFD7fD91DbA514dc1169A85fD9D6659Ad03",
      "txHash": "0x50e039d1a387b3ac015dbd7c1bc6e28a2cea87da7f5e2e00350ae7d485439d07",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IEcoPyth)54059",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:161"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:162"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:163"
          },
          {
            "label": "senderOverride",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:164"
          },
          {
            "label": "minExecutionFee",
            "offset": 20,
            "slot": "154",
            "type": "t_uint64",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:166"
          },
          {
            "label": "minExecutionTimestamp",
            "offset": 28,
            "slot": "154",
            "type": "t_uint32",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:167"
          },
          {
            "label": "isAllowAllExecutor",
            "offset": 0,
            "slot": "155",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:168"
          },
          {
            "label": "isGuaranteeLimitPrice",
            "offset": 1,
            "slot": "155",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:169"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:171"
          },
          {
            "label": "limitOrders",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)36172_storage))",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:172"
          },
          {
            "label": "limitOrdersIndex",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:173"
          },
          {
            "label": "delegations",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_address)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:174"
          },
          {
            "label": "activeOrderPointers",
            "offset": 0,
            "slot": "160",
            "type": "t_struct(UintSet)11178_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:177"
          },
          {
            "label": "activeMarketOrderPointers",
            "offset": 0,
            "slot": "162",
            "type": "t_struct(UintSet)11178_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:178"
          },
          {
            "label": "activeLimitOrderPointers",
            "offset": 0,
            "slot": "164",
            "type": "t_struct(UintSet)11178_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:179"
          },
          {
            "label": "subAccountActiveOrderPointers",
            "offset": 0,
            "slot": "166",
            "type": "t_mapping(t_address,t_struct(UintSet)11178_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:181"
          },
          {
            "label": "subAccountActiveMarketOrderPointers",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_address,t_struct(UintSet)11178_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:182"
          },
          {
            "label": "subAccountActiveLimitOrderPointers",
            "offset": 0,
            "slot": "168",
            "type": "t_mapping(t_address,t_struct(UintSet)11178_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:183"
          },
          {
            "label": "limitTradeHelper",
            "offset": 0,
            "slot": "169",
            "type": "t_contract(LimitTradeHelper)37342",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:185"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IEcoPyth)54059": {
            "label": "contract IEcoPyth",
            "numberOfBytes": "20"
          },
          "t_contract(LimitTradeHelper)37342": {
            "label": "contract LimitTradeHelper",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)36172_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ILimitTradeHandler.LimitOrder))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)11178_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LimitOrder)36172_storage)": {
            "label": "mapping(uint256 => struct ILimitTradeHandler.LimitOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(LimitOrder)36172_storage": {
            "label": "struct ILimitTradeHandler.LimitOrder",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tpToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "triggerAboveThreshold",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "reduceOnly",
                "type": "t_bool",
                "offset": 21,
                "slot": "1"
              },
              {
                "label": "sizeDelta",
                "type": "t_int256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "orderIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "marketIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "triggerPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "acceptablePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Set)10706_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)11178_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10706_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "80b86447d8fcd27d621f32a6aaf7a5b3c35cd64712d91dbe09c7d7c1d5a1c26f": {
      "address": "0x2859751c033E64b1050f5E9642C4848293D3caE1",
      "txHash": "0x21cfdcb841ea7636e8d83a231bf289246d5868d04e5c69823a23357de6345571",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "151",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "152",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "203",
            "type": "t_contract(IEcoPyth)54059",
            "contract": "IntentHandler",
            "src": "src/handlers/IntentHandler.sol:31"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(ConfigStorage)72702",
            "contract": "IntentHandler",
            "src": "src/handlers/IntentHandler.sol:32"
          },
          {
            "label": "tradeOrderHelper",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(TradeOrderHelper)41227",
            "contract": "IntentHandler",
            "src": "src/handlers/IntentHandler.sol:33"
          },
          {
            "label": "gasService",
            "offset": 0,
            "slot": "206",
            "type": "t_contract(GasService)57666",
            "contract": "IntentHandler",
            "src": "src/handlers/IntentHandler.sol:34"
          },
          {
            "label": "executedIntents",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "IntentHandler",
            "src": "src/handlers/IntentHandler.sol:35"
          },
          {
            "label": "intentExecutors",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "IntentHandler",
            "src": "src/handlers/IntentHandler.sol:36"
          },
          {
            "label": "delegations",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_address)",
            "contract": "IntentHandler",
            "src": "src/handlers/IntentHandler.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ConfigStorage)72702": {
            "label": "contract ConfigStorage",
            "numberOfBytes": "20"
          },
          "t_contract(GasService)57666": {
            "label": "contract GasService",
            "numberOfBytes": "20"
          },
          "t_contract(IEcoPyth)54059": {
            "label": "contract IEcoPyth",
            "numberOfBytes": "20"
          },
          "t_contract(TradeOrderHelper)41227": {
            "label": "contract TradeOrderHelper",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d7d2ee2892d6e5b2df81448a459cc1c97f424029b51a404974054ee162b32ebf": {
      "address": "0x7FeC31e5966C84E8A81C574a0504ff637E3CC569",
      "txHash": "0x4b82e3fef3eca0e836246c21c9f4a94071487d873540a0545f27bbc96b5ca71d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "liquidityService",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:89"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:90"
          },
          {
            "label": "nextExecutionOrderIndex",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:91"
          },
          {
            "label": "minExecutionOrderFee",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:92"
          },
          {
            "label": "maxExecutionChunk",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:93"
          },
          {
            "label": "liquidityOrders",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_struct(LiquidityOrder)36652_storage)dyn_storage",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:95"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:96"
          },
          {
            "label": "accountExecutedLiquidityOrders",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_array(t_struct(LiquidityOrder)36652_storage)dyn_storage)",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:97"
          },
          {
            "label": "hlpStaking",
            "offset": 0,
            "slot": "159",
            "type": "t_contract(ISurgeStaking)70680",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:99"
          },
          {
            "label": "isSurge",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:100"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(LiquidityOrder)36652_storage)dyn_storage": {
            "label": "struct ILiquidityHandler.LiquidityOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ISurgeStaking)70680": {
            "label": "contract ISurgeStaking",
            "numberOfBytes": "20"
          },
          "t_enum(LiquidityOrderStatus)36626": {
            "label": "enum ILiquidityHandler.LiquidityOrderStatus",
            "members": [
              "PENDING",
              "SUCCESS",
              "FAIL"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(LiquidityOrder)36652_storage)dyn_storage)": {
            "label": "mapping(address => struct ILiquidityHandler.LiquidityOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(LiquidityOrder)36652_storage": {
            "label": "struct ILiquidityHandler.LiquidityOrder",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minOut",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "actualAmountOut",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "executedTimestamp",
                "type": "t_uint48",
                "offset": 26,
                "slot": "5"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "isAdd",
                "type": "t_bool",
                "offset": 20,
                "slot": "6"
              },
              {
                "label": "isNativeOut",
                "type": "t_bool",
                "offset": 21,
                "slot": "6"
              },
              {
                "label": "status",
                "type": "t_enum(LiquidityOrderStatus)36626",
                "offset": 22,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2efdb8026f95dc7300cf4df7254bf0dd044d6575a309a56a7d80edccb616c3bf": {
      "address": "0x468a7b54FF1Ce75749Aa16499ffC00f5D02edE7e",
      "txHash": "0x52c74df9562adc9603039ff01d27585257d3406bd67cd47058e9f8bdde7ce581",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "liquidityConfig",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(LiquidityConfig)77356_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:64"
          },
          {
            "label": "swapConfig",
            "offset": 0,
            "slot": "103",
            "type": "t_struct(SwapConfig)77361_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:65"
          },
          {
            "label": "tradingConfig",
            "offset": 0,
            "slot": "104",
            "type": "t_struct(TradingConfig)77370_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:66"
          },
          {
            "label": "liquidationConfig",
            "offset": 0,
            "slot": "107",
            "type": "t_struct(LiquidationConfig)77373_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:67"
          },
          {
            "label": "allowedLiquidators",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:69"
          },
          {
            "label": "serviceExecutors",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:70"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:72"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:73"
          },
          {
            "label": "hlp",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:74"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "113",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:75"
          },
          {
            "label": "pnlFactorBPS",
            "offset": 20,
            "slot": "113",
            "type": "t_uint32",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:76"
          },
          {
            "label": "minimumPositionSize",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:77"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "115",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:78"
          },
          {
            "label": "sglp",
            "offset": 0,
            "slot": "116",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:79"
          },
          {
            "label": "tokenAssetIds",
            "offset": 0,
            "slot": "117",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:82"
          },
          {
            "label": "assetConfigs",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_bytes32,t_struct(AssetConfig)77287_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:84"
          },
          {
            "label": "hlpAssetIds",
            "offset": 0,
            "slot": "119",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:86"
          },
          {
            "label": "assetHlpTokenConfigs",
            "offset": 0,
            "slot": "120",
            "type": "t_mapping(t_bytes32,t_struct(HLPTokenConfig)77296_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:87"
          },
          {
            "label": "collateralAssetIds",
            "offset": 0,
            "slot": "121",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:89"
          },
          {
            "label": "assetCollateralTokenConfigs",
            "offset": 0,
            "slot": "122",
            "type": "t_mapping(t_bytes32,t_struct(CollateralTokenConfig)77303_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:90"
          },
          {
            "label": "marketConfigs",
            "offset": 0,
            "slot": "123",
            "type": "t_array(t_struct(MarketConfig)77334_storage)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:92"
          },
          {
            "label": "assetClassConfigs",
            "offset": 0,
            "slot": "124",
            "type": "t_array(t_struct(AssetClassConfig)77337_storage)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:93"
          },
          {
            "label": "tradeServiceHooks",
            "offset": 0,
            "slot": "125",
            "type": "t_array(t_address)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:94"
          },
          {
            "label": "configExecutors",
            "offset": 0,
            "slot": "126",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:96"
          },
          {
            "label": "switchCollateralRouter",
            "offset": 0,
            "slot": "127",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:98"
          },
          {
            "label": "minProfitDurations",
            "offset": 0,
            "slot": "128",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:100"
          },
          {
            "label": "isAdaptiveFeeEnabledByMarketIndex",
            "offset": 0,
            "slot": "129",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:102"
          },
          {
            "label": "ybTokenOf",
            "offset": 0,
            "slot": "130",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:104"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(AssetClassConfig)77337_storage)dyn_storage": {
            "label": "struct IConfigStorage.AssetClassConfig[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MarketConfig)77334_storage)dyn_storage": {
            "label": "struct IConfigStorage.MarketConfig[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AssetConfig)77287_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.AssetConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(CollateralTokenConfig)77303_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.CollateralTokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(HLPTokenConfig)77296_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.HLPTokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AssetClassConfig)77337_storage": {
            "label": "struct IConfigStorage.AssetClassConfig",
            "members": [
              {
                "label": "baseBorrowingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(AssetConfig)77287_storage": {
            "label": "struct IConfigStorage.AssetConfig",
            "members": [
              {
                "label": "tokenAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "assetId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "decimals",
                "type": "t_uint8",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isStableCoin",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(CollateralTokenConfig)77303_storage": {
            "label": "struct IConfigStorage.CollateralTokenConfig",
            "members": [
              {
                "label": "settleStrategy",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "collateralFactorBPS",
                "type": "t_uint32",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "accepted",
                "type": "t_bool",
                "offset": 24,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FundingRate)77308_storage": {
            "label": "struct IConfigStorage.FundingRate",
            "members": [
              {
                "label": "maxSkewScaleUSD",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxFundingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(HLPTokenConfig)77296_storage": {
            "label": "struct IConfigStorage.HLPTokenConfig",
            "members": [
              {
                "label": "targetWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "bufferLiquidity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxWeightDiff",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "accepted",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(LiquidationConfig)77373_storage": {
            "label": "struct IConfigStorage.LiquidationConfig",
            "members": [
              {
                "label": "liquidationFeeUSDE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LiquidityConfig)77356_storage": {
            "label": "struct IConfigStorage.LiquidityConfig",
            "members": [
              {
                "label": "hlpTotalTokenWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "hlpSafetyBufferBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taxFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "flashLoanFeeRateBPS",
                "type": "t_uint32",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "maxHLPUtilizationBPS",
                "type": "t_uint32",
                "offset": 12,
                "slot": "1"
              },
              {
                "label": "depositFeeRateBPS",
                "type": "t_uint32",
                "offset": 16,
                "slot": "1"
              },
              {
                "label": "withdrawFeeRateBPS",
                "type": "t_uint32",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "dynamicFeeEnabled",
                "type": "t_bool",
                "offset": 24,
                "slot": "1"
              },
              {
                "label": "enabled",
                "type": "t_bool",
                "offset": 25,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MarketConfig)77334_storage": {
            "label": "struct IConfigStorage.MarketConfig",
            "members": [
              {
                "label": "assetId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxLongPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxShortPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "increasePositionFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "decreasePositionFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "3"
              },
              {
                "label": "initialMarginFractionBPS",
                "type": "t_uint32",
                "offset": 8,
                "slot": "3"
              },
              {
                "label": "maintenanceMarginFractionBPS",
                "type": "t_uint32",
                "offset": 12,
                "slot": "3"
              },
              {
                "label": "maxProfitRateBPS",
                "type": "t_uint32",
                "offset": 16,
                "slot": "3"
              },
              {
                "label": "assetClass",
                "type": "t_uint8",
                "offset": 20,
                "slot": "3"
              },
              {
                "label": "allowIncreasePosition",
                "type": "t_bool",
                "offset": 21,
                "slot": "3"
              },
              {
                "label": "active",
                "type": "t_bool",
                "offset": 22,
                "slot": "3"
              },
              {
                "label": "fundingRate",
                "type": "t_struct(FundingRate)77308_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(SwapConfig)77361_storage": {
            "label": "struct IConfigStorage.SwapConfig",
            "members": [
              {
                "label": "stablecoinSwapFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "swapFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TradingConfig)77370_storage": {
            "label": "struct IConfigStorage.TradingConfig",
            "members": [
              {
                "label": "fundingInterval",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "minProfitDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "devFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxPosition",
                "type": "t_uint8",
                "offset": 4,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c7045dd07d5e8e0d1469727f85cf413ce464874efc43e6a57b23ccaff71feec4": {
      "address": "0x58C521332Ed363D30A22B9bC6e4F3d59A8960955",
      "txHash": "0x7186ebdb641a7ba5505f3bbea2221d3ced14b1835b87e72614f27b14ea88f95f",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "crossMarginService",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:94"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:95"
          },
          {
            "label": "nextExecutionOrderIndex",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:96"
          },
          {
            "label": "minExecutionOrderFee",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:97"
          },
          {
            "label": "maxExecutionChuck",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:98"
          },
          {
            "label": "withdrawOrders",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_struct(WithdrawOrder)36758_storage)dyn_storage",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:100"
          },
          {
            "label": "subAccountExecutedWithdrawOrders",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_array(t_struct(WithdrawOrder)36758_storage)dyn_storage)",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:101"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:102"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(WithdrawOrder)36758_storage)dyn_storage": {
            "label": "struct ICrossMarginHandler.WithdrawOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CrossMarginService)59322": {
            "label": "contract CrossMarginService",
            "numberOfBytes": "20"
          },
          "t_enum(WithdrawOrderStatus)36733": {
            "label": "enum ICrossMarginHandler.WithdrawOrderStatus",
            "members": [
              "PENDING",
              "SUCCESS",
              "FAIL"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(WithdrawOrder)36758_storage)dyn_storage)": {
            "label": "mapping(address => struct ICrossMarginHandler.WithdrawOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawOrder)36758_storage": {
            "label": "struct ICrossMarginHandler.WithdrawOrder",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint48",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "executedTimestamp",
                "type": "t_uint48",
                "offset": 6,
                "slot": "3"
              },
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 12,
                "slot": "3"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "crossMarginService",
                "type": "t_contract(CrossMarginService)59322",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "status",
                "type": "t_enum(WithdrawOrderStatus)36733",
                "offset": 21,
                "slot": "5"
              },
              {
                "label": "shouldUnwrap",
                "type": "t_bool",
                "offset": 22,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f122c6179789f02135155003dacf0597ca58c0db98f5f2d3ca67552fbf0fecaa": {
      "address": "0x802597cEA8DBceEdBfE6741A144f18148Ccc73B9",
      "txHash": "0x2f6dfb490e9797e3d793e3373d0200073bdb074c3f87aac07306dc295d08fa9d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "liquidityService",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:93"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:94"
          },
          {
            "label": "nextExecutionOrderIndex",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:95"
          },
          {
            "label": "minExecutionOrderFee",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:96"
          },
          {
            "label": "maxExecutionChunk",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:97"
          },
          {
            "label": "liquidityOrders",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_struct(LiquidityOrder)38111_storage)dyn_storage",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:99"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:100"
          },
          {
            "label": "accountExecutedLiquidityOrders",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_array(t_struct(LiquidityOrder)38111_storage)dyn_storage)",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:101"
          },
          {
            "label": "hlpStaking",
            "offset": 0,
            "slot": "159",
            "type": "t_contract(ISurgeStaking)72546",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:103"
          },
          {
            "label": "isSurge",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:104"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(LiquidityOrder)38111_storage)dyn_storage": {
            "label": "struct ILiquidityHandler.LiquidityOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ISurgeStaking)72546": {
            "label": "contract ISurgeStaking",
            "numberOfBytes": "20"
          },
          "t_enum(LiquidityOrderStatus)38085": {
            "label": "enum ILiquidityHandler.LiquidityOrderStatus",
            "members": [
              "PENDING",
              "SUCCESS",
              "FAIL"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(LiquidityOrder)38111_storage)dyn_storage)": {
            "label": "mapping(address => struct ILiquidityHandler.LiquidityOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(LiquidityOrder)38111_storage": {
            "label": "struct ILiquidityHandler.LiquidityOrder",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minOut",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "actualAmountOut",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "executedTimestamp",
                "type": "t_uint48",
                "offset": 26,
                "slot": "5"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "isAdd",
                "type": "t_bool",
                "offset": 20,
                "slot": "6"
              },
              {
                "label": "isNativeOut",
                "type": "t_bool",
                "offset": 21,
                "slot": "6"
              },
              {
                "label": "status",
                "type": "t_enum(LiquidityOrderStatus)38085",
                "offset": 22,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "58783d510393078bf8ab1281b9a570e58423d24002b77eef0614bc9212759bdf": {
      "address": "0x642f8d7c637d21D857a42bE8Dad713D915d5382d",
      "txHash": "0x6d5cc74da5675925b3dc08d1d1d3c08d7d16da6d3e3394426eb7d78a0abaea37",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "crossMarginService",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(CrossMarginService)59258",
            "contract": "Ext01Handler",
            "src": "src/handlers/Ext01Handler.sol:111"
          },
          {
            "label": "liquidationService",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(LiquidationService)60910",
            "contract": "Ext01Handler",
            "src": "src/handlers/Ext01Handler.sol:112"
          },
          {
            "label": "liquidityService",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(LiquidityService)62068",
            "contract": "Ext01Handler",
            "src": "src/handlers/Ext01Handler.sol:113"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(TradeService)67765",
            "contract": "Ext01Handler",
            "src": "src/handlers/Ext01Handler.sol:114"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IEcoPyth)55805",
            "contract": "Ext01Handler",
            "src": "src/handlers/Ext01Handler.sol:115"
          },
          {
            "label": "_senderOverride",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "Ext01Handler",
            "src": "src/handlers/Ext01Handler.sol:120"
          },
          {
            "label": "minExecutionOrderOf",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_uint24,t_uint128)",
            "contract": "Ext01Handler",
            "src": "src/handlers/Ext01Handler.sol:122"
          },
          {
            "label": "genericOrders",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(GenericOrder)37142_storage))",
            "contract": "Ext01Handler",
            "src": "src/handlers/Ext01Handler.sol:123"
          },
          {
            "label": "genericOrdersIndex",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Ext01Handler",
            "src": "src/handlers/Ext01Handler.sol:124"
          },
          {
            "label": "delegations",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_address)",
            "contract": "Ext01Handler",
            "src": "src/handlers/Ext01Handler.sol:125"
          },
          {
            "label": "_activeOrderPointers",
            "offset": 0,
            "slot": "161",
            "type": "t_struct(UintSet)11178_storage",
            "contract": "Ext01Handler",
            "src": "src/handlers/Ext01Handler.sol:128"
          },
          {
            "label": "_executedOrderPointers",
            "offset": 0,
            "slot": "163",
            "type": "t_struct(UintSet)11178_storage",
            "contract": "Ext01Handler",
            "src": "src/handlers/Ext01Handler.sol:129"
          },
          {
            "label": "_subAccountActiveOrderPointers",
            "offset": 0,
            "slot": "165",
            "type": "t_mapping(t_address,t_struct(UintSet)11178_storage)",
            "contract": "Ext01Handler",
            "src": "src/handlers/Ext01Handler.sol:130"
          },
          {
            "label": "_subAccountExecutedOrderPointers",
            "offset": 0,
            "slot": "166",
            "type": "t_mapping(t_address,t_struct(UintSet)11178_storage)",
            "contract": "Ext01Handler",
            "src": "src/handlers/Ext01Handler.sol:131"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Ext01Handler",
            "src": "src/handlers/Ext01Handler.sol:133"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(CrossMarginService)59258": {
            "label": "contract CrossMarginService",
            "numberOfBytes": "20"
          },
          "t_contract(IEcoPyth)55805": {
            "label": "contract IEcoPyth",
            "numberOfBytes": "20"
          },
          "t_contract(LiquidationService)60910": {
            "label": "contract LiquidationService",
            "numberOfBytes": "20"
          },
          "t_contract(LiquidityService)62068": {
            "label": "contract LiquidityService",
            "numberOfBytes": "20"
          },
          "t_contract(TradeService)67765": {
            "label": "contract TradeService",
            "numberOfBytes": "20"
          },
          "t_enum(OrderStatus)37126": {
            "label": "enum IExt01Handler.OrderStatus",
            "members": [
              "PENDING",
              "SUCCESS",
              "FAIL"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(GenericOrder)37142_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IExt01Handler.GenericOrder))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)11178_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint24,t_uint128)": {
            "label": "mapping(uint24 => uint128)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(GenericOrder)37142_storage)": {
            "label": "mapping(uint256 => struct IExt01Handler.GenericOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(GenericOrder)37142_storage": {
            "label": "struct IExt01Handler.GenericOrder",
            "members": [
              {
                "label": "orderIndex",
                "type": "t_uint248",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)37126",
                "offset": 31,
                "slot": "0"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint48",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "executedTimestamp",
                "type": "t_uint48",
                "offset": 6,
                "slot": "1"
              },
              {
                "label": "orderType",
                "type": "t_uint24",
                "offset": 12,
                "slot": "1"
              },
              {
                "label": "executionFee",
                "type": "t_uint128",
                "offset": 15,
                "slot": "1"
              },
              {
                "label": "rawOrder",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)10706_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)11178_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10706_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint248": {
            "label": "uint248",
            "numberOfBytes": "31"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e4d7b879dc357e4c78606db673c0210db1cd3f27fc97340a815cac8e10471077": {
      "address": "0x011E89DF22948c136F3b63b911cbC01a1a1ebC07",
      "txHash": "0x1290336081456af79d48cdb51344947dfb8254d19e1802ac9519fe90c3227b7b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "crossMarginService",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:94"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:95"
          },
          {
            "label": "nextExecutionOrderIndex",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:96"
          },
          {
            "label": "minExecutionOrderFee",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:97"
          },
          {
            "label": "maxExecutionChuck",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:98"
          },
          {
            "label": "withdrawOrders",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_struct(WithdrawOrder)36826_storage)dyn_storage",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:100"
          },
          {
            "label": "subAccountExecutedWithdrawOrders",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_array(t_struct(WithdrawOrder)36826_storage)dyn_storage)",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:101"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:102"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(WithdrawOrder)36826_storage)dyn_storage": {
            "label": "struct ICrossMarginHandler.WithdrawOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CrossMarginService)59449": {
            "label": "contract CrossMarginService",
            "numberOfBytes": "20"
          },
          "t_enum(WithdrawOrderStatus)36801": {
            "label": "enum ICrossMarginHandler.WithdrawOrderStatus",
            "members": [
              "PENDING",
              "SUCCESS",
              "FAIL"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(WithdrawOrder)36826_storage)dyn_storage)": {
            "label": "mapping(address => struct ICrossMarginHandler.WithdrawOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawOrder)36826_storage": {
            "label": "struct ICrossMarginHandler.WithdrawOrder",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint48",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "executedTimestamp",
                "type": "t_uint48",
                "offset": 6,
                "slot": "3"
              },
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 12,
                "slot": "3"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "crossMarginService",
                "type": "t_contract(CrossMarginService)59449",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "status",
                "type": "t_enum(WithdrawOrderStatus)36801",
                "offset": 21,
                "slot": "5"
              },
              {
                "label": "shouldUnwrap",
                "type": "t_bool",
                "offset": 22,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4d5f8ccd50ba3e3983278a01a193daa5d7faf788ab9c563648287e24a8dd1c57": {
      "address": "0xff9c10F2a207c6c60b1f57228bb366c05d11fC1C",
      "txHash": "0xe20d7f60bfbc6008cb5d14406e68ec0ef2ea7fbf8ce65a6be4e012fc1c204010",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "crossMarginService",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:94"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:95"
          },
          {
            "label": "nextExecutionOrderIndex",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:96"
          },
          {
            "label": "minExecutionOrderFee",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:97"
          },
          {
            "label": "maxExecutionChuck",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:98"
          },
          {
            "label": "withdrawOrders",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_struct(WithdrawOrder)36858_storage)dyn_storage",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:100"
          },
          {
            "label": "subAccountExecutedWithdrawOrders",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_array(t_struct(WithdrawOrder)36858_storage)dyn_storage)",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:101"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:102"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(WithdrawOrder)36858_storage)dyn_storage": {
            "label": "struct ICrossMarginHandler.WithdrawOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CrossMarginService)59481": {
            "label": "contract CrossMarginService",
            "numberOfBytes": "20"
          },
          "t_enum(WithdrawOrderStatus)36833": {
            "label": "enum ICrossMarginHandler.WithdrawOrderStatus",
            "members": [
              "PENDING",
              "SUCCESS",
              "FAIL"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(WithdrawOrder)36858_storage)dyn_storage)": {
            "label": "mapping(address => struct ICrossMarginHandler.WithdrawOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawOrder)36858_storage": {
            "label": "struct ICrossMarginHandler.WithdrawOrder",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint48",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "executedTimestamp",
                "type": "t_uint48",
                "offset": 6,
                "slot": "3"
              },
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 12,
                "slot": "3"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "crossMarginService",
                "type": "t_contract(CrossMarginService)59481",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "status",
                "type": "t_enum(WithdrawOrderStatus)36833",
                "offset": 21,
                "slot": "5"
              },
              {
                "label": "shouldUnwrap",
                "type": "t_bool",
                "offset": 22,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6b2c2fbbf769bab01bf94e151ebb2b5d9f4d39e38724108c3a348f1a1f234bfa": {
      "address": "0xf5610077b12A9700ee9a947c0Af9A758732a1722",
      "txHash": "0x6ddaa9aeaae5b92e752e6fa08f819cf0eeaa90e0aa6a38fd80ab82978b62b7f8",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "liquidityService",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:93"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:94"
          },
          {
            "label": "nextExecutionOrderIndex",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:95"
          },
          {
            "label": "minExecutionOrderFee",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:96"
          },
          {
            "label": "maxExecutionChunk",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:97"
          },
          {
            "label": "liquidityOrders",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_struct(LiquidityOrder)38184_storage)dyn_storage",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:99"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:100"
          },
          {
            "label": "accountExecutedLiquidityOrders",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_array(t_struct(LiquidityOrder)38184_storage)dyn_storage)",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:101"
          },
          {
            "label": "hlpStaking",
            "offset": 0,
            "slot": "159",
            "type": "t_contract(ISurgeStaking)72619",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:103"
          },
          {
            "label": "isSurge",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:104"
          },
          {
            "label": "isNotAutoStake",
            "offset": 0,
            "slot": "161",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:105"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(LiquidityOrder)38184_storage)dyn_storage": {
            "label": "struct ILiquidityHandler.LiquidityOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ISurgeStaking)72619": {
            "label": "contract ISurgeStaking",
            "numberOfBytes": "20"
          },
          "t_enum(LiquidityOrderStatus)38158": {
            "label": "enum ILiquidityHandler.LiquidityOrderStatus",
            "members": [
              "PENDING",
              "SUCCESS",
              "FAIL"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(LiquidityOrder)38184_storage)dyn_storage)": {
            "label": "mapping(address => struct ILiquidityHandler.LiquidityOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(LiquidityOrder)38184_storage": {
            "label": "struct ILiquidityHandler.LiquidityOrder",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minOut",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "actualAmountOut",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "executedTimestamp",
                "type": "t_uint48",
                "offset": 26,
                "slot": "5"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "isAdd",
                "type": "t_bool",
                "offset": 20,
                "slot": "6"
              },
              {
                "label": "isNativeOut",
                "type": "t_bool",
                "offset": 21,
                "slot": "6"
              },
              {
                "label": "status",
                "type": "t_enum(LiquidityOrderStatus)38158",
                "offset": 22,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fdb8e668afadc99184fe312d5df5a823b86b633f53adfcca5cd762c1e556782b": {
      "address": "0x13D58FE66A6559DeaCcb115bf826cb8aC2eA5a39",
      "txHash": "0xb7d40a7f0fcfaf41b705460dc62ddfe82c620952015558b505208e78268a9864",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "liquidityService",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:93"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:94"
          },
          {
            "label": "nextExecutionOrderIndex",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:95"
          },
          {
            "label": "minExecutionOrderFee",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:96"
          },
          {
            "label": "maxExecutionChunk",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:97"
          },
          {
            "label": "liquidityOrders",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_struct(LiquidityOrder)38768_storage)dyn_storage",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:99"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:100"
          },
          {
            "label": "accountExecutedLiquidityOrders",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_array(t_struct(LiquidityOrder)38768_storage)dyn_storage)",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:101"
          },
          {
            "label": "hlpStaking",
            "offset": 0,
            "slot": "159",
            "type": "t_contract(ISurgeStaking)72533",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:103"
          },
          {
            "label": "isSurge",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:104"
          },
          {
            "label": "isNotAutoStake",
            "offset": 0,
            "slot": "161",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:105"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(LiquidityOrder)38768_storage)dyn_storage": {
            "label": "struct ILiquidityHandler.LiquidityOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ISurgeStaking)72533": {
            "label": "contract ISurgeStaking",
            "numberOfBytes": "20"
          },
          "t_enum(LiquidityOrderStatus)38742": {
            "label": "enum ILiquidityHandler.LiquidityOrderStatus",
            "members": [
              "PENDING",
              "SUCCESS",
              "FAIL"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(LiquidityOrder)38768_storage)dyn_storage)": {
            "label": "mapping(address => struct ILiquidityHandler.LiquidityOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(LiquidityOrder)38768_storage": {
            "label": "struct ILiquidityHandler.LiquidityOrder",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minOut",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "actualAmountOut",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "executedTimestamp",
                "type": "t_uint48",
                "offset": 26,
                "slot": "5"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "isAdd",
                "type": "t_bool",
                "offset": 20,
                "slot": "6"
              },
              {
                "label": "isNativeOut",
                "type": "t_bool",
                "offset": 21,
                "slot": "6"
              },
              {
                "label": "status",
                "type": "t_enum(LiquidityOrderStatus)38742",
                "offset": 22,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "10b3184f1f6f4c99a7ba8dda23421fdd84fe33f2c28a4abfe3f78ad1d9c879c8": {
      "address": "0x9ac5293E061eE7Cf5619aBb9251F23D7Ed44562A",
      "txHash": "0xf65bcec50ac784128ea112fba095c2c383410fbf8b12729deb756adec8306b91",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "tradingStaking",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "TradingStakingHook",
            "src": "src/staking/TradingStakingHook.sol:18"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "TradingStakingHook",
            "src": "src/staking/TradingStakingHook.sol:19"
          },
          {
            "label": "whitelistedCallers",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TradingStakingHook",
            "src": "src/staking/TradingStakingHook.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ad5bc9deeee2e48a80e9356db42e288fa7ff913c8044efff95e6026c0826fbb8": {
      "address": "0x3bEB6512768C21810F39d9a33c0e75611Ee97d1B",
      "txHash": "0xa63e4e82aa874c1e6c9b8c2e70d52b61500b05c06e1d4d00d1b4b3ba193b79df",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "TLCHook",
            "src": "src/staking/TLCHook.sol:23"
          },
          {
            "label": "tlc",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "TLCHook",
            "src": "src/staking/TLCHook.sol:24"
          },
          {
            "label": "tlcStaking",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "TLCHook",
            "src": "src/staking/TLCHook.sol:25"
          },
          {
            "label": "marketWeights",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "TLCHook",
            "src": "src/staking/TLCHook.sol:28"
          },
          {
            "label": "whitelistedCallers",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TLCHook",
            "src": "src/staking/TLCHook.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8c8cdc24ba5747d0c680d703a96dbe701044a3bb01ce11a7eca5845e7b2fd76c": {
      "address": "0xcb8648D87f785Df4575A0a5c5AD51cc981ff798E",
      "txHash": "0x11cc8eb74ff77b817b01370f4f4fc8f58e039355d7da508e7b146b35d88bf06a",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "liquidityConfig",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(LiquidityConfig)78754_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:65"
          },
          {
            "label": "swapConfig",
            "offset": 0,
            "slot": "103",
            "type": "t_struct(SwapConfig)78759_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:66"
          },
          {
            "label": "tradingConfig",
            "offset": 0,
            "slot": "104",
            "type": "t_struct(TradingConfig)78768_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:67"
          },
          {
            "label": "liquidationConfig",
            "offset": 0,
            "slot": "107",
            "type": "t_struct(LiquidationConfig)78771_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:68"
          },
          {
            "label": "allowedLiquidators",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:70"
          },
          {
            "label": "serviceExecutors",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:71"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:73"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:74"
          },
          {
            "label": "hlp",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:75"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "113",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:76"
          },
          {
            "label": "pnlFactorBPS",
            "offset": 20,
            "slot": "113",
            "type": "t_uint32",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:77"
          },
          {
            "label": "minimumPositionSize",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:78"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "115",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:79"
          },
          {
            "label": "sglp",
            "offset": 0,
            "slot": "116",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:80"
          },
          {
            "label": "tokenAssetIds",
            "offset": 0,
            "slot": "117",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:83"
          },
          {
            "label": "assetConfigs",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_bytes32,t_struct(AssetConfig)78685_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:85"
          },
          {
            "label": "hlpAssetIds",
            "offset": 0,
            "slot": "119",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:87"
          },
          {
            "label": "assetHlpTokenConfigs",
            "offset": 0,
            "slot": "120",
            "type": "t_mapping(t_bytes32,t_struct(HLPTokenConfig)78694_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:88"
          },
          {
            "label": "collateralAssetIds",
            "offset": 0,
            "slot": "121",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:90"
          },
          {
            "label": "assetCollateralTokenConfigs",
            "offset": 0,
            "slot": "122",
            "type": "t_mapping(t_bytes32,t_struct(CollateralTokenConfig)78701_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:91"
          },
          {
            "label": "marketConfigs",
            "offset": 0,
            "slot": "123",
            "type": "t_array(t_struct(MarketConfig)78732_storage)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:93"
          },
          {
            "label": "assetClassConfigs",
            "offset": 0,
            "slot": "124",
            "type": "t_array(t_struct(AssetClassConfig)78735_storage)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:94"
          },
          {
            "label": "tradeServiceHooks",
            "offset": 0,
            "slot": "125",
            "type": "t_array(t_address)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:95"
          },
          {
            "label": "configExecutors",
            "offset": 0,
            "slot": "126",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:97"
          },
          {
            "label": "switchCollateralRouter",
            "offset": 0,
            "slot": "127",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:99"
          },
          {
            "label": "minProfitDurations",
            "offset": 0,
            "slot": "128",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:101"
          },
          {
            "label": "isAdaptiveFeeEnabledByMarketIndex",
            "offset": 0,
            "slot": "129",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:103"
          },
          {
            "label": "ybTokenOf",
            "offset": 0,
            "slot": "130",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:105"
          },
          {
            "label": "stepMinProfitDurations",
            "offset": 0,
            "slot": "131",
            "type": "t_array(t_struct(StepMinProfitDuration)78778_storage)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:107"
          },
          {
            "label": "isStepMinProfitEnabledByMarketIndex",
            "offset": 0,
            "slot": "132",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:108"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(AssetClassConfig)78735_storage)dyn_storage": {
            "label": "struct IConfigStorage.AssetClassConfig[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MarketConfig)78732_storage)dyn_storage": {
            "label": "struct IConfigStorage.MarketConfig[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(StepMinProfitDuration)78778_storage)dyn_storage": {
            "label": "struct IConfigStorage.StepMinProfitDuration[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AssetConfig)78685_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.AssetConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(CollateralTokenConfig)78701_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.CollateralTokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(HLPTokenConfig)78694_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.HLPTokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AssetClassConfig)78735_storage": {
            "label": "struct IConfigStorage.AssetClassConfig",
            "members": [
              {
                "label": "baseBorrowingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(AssetConfig)78685_storage": {
            "label": "struct IConfigStorage.AssetConfig",
            "members": [
              {
                "label": "tokenAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "assetId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "decimals",
                "type": "t_uint8",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isStableCoin",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(CollateralTokenConfig)78701_storage": {
            "label": "struct IConfigStorage.CollateralTokenConfig",
            "members": [
              {
                "label": "settleStrategy",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "collateralFactorBPS",
                "type": "t_uint32",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "accepted",
                "type": "t_bool",
                "offset": 24,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FundingRate)78706_storage": {
            "label": "struct IConfigStorage.FundingRate",
            "members": [
              {
                "label": "maxSkewScaleUSD",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxFundingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(HLPTokenConfig)78694_storage": {
            "label": "struct IConfigStorage.HLPTokenConfig",
            "members": [
              {
                "label": "targetWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "bufferLiquidity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxWeightDiff",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "accepted",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(LiquidationConfig)78771_storage": {
            "label": "struct IConfigStorage.LiquidationConfig",
            "members": [
              {
                "label": "liquidationFeeUSDE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LiquidityConfig)78754_storage": {
            "label": "struct IConfigStorage.LiquidityConfig",
            "members": [
              {
                "label": "hlpTotalTokenWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "hlpSafetyBufferBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taxFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "flashLoanFeeRateBPS",
                "type": "t_uint32",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "maxHLPUtilizationBPS",
                "type": "t_uint32",
                "offset": 12,
                "slot": "1"
              },
              {
                "label": "depositFeeRateBPS",
                "type": "t_uint32",
                "offset": 16,
                "slot": "1"
              },
              {
                "label": "withdrawFeeRateBPS",
                "type": "t_uint32",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "dynamicFeeEnabled",
                "type": "t_bool",
                "offset": 24,
                "slot": "1"
              },
              {
                "label": "enabled",
                "type": "t_bool",
                "offset": 25,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MarketConfig)78732_storage": {
            "label": "struct IConfigStorage.MarketConfig",
            "members": [
              {
                "label": "assetId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxLongPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxShortPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "increasePositionFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "decreasePositionFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "3"
              },
              {
                "label": "initialMarginFractionBPS",
                "type": "t_uint32",
                "offset": 8,
                "slot": "3"
              },
              {
                "label": "maintenanceMarginFractionBPS",
                "type": "t_uint32",
                "offset": 12,
                "slot": "3"
              },
              {
                "label": "maxProfitRateBPS",
                "type": "t_uint32",
                "offset": 16,
                "slot": "3"
              },
              {
                "label": "assetClass",
                "type": "t_uint8",
                "offset": 20,
                "slot": "3"
              },
              {
                "label": "allowIncreasePosition",
                "type": "t_bool",
                "offset": 21,
                "slot": "3"
              },
              {
                "label": "active",
                "type": "t_bool",
                "offset": 22,
                "slot": "3"
              },
              {
                "label": "fundingRate",
                "type": "t_struct(FundingRate)78706_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(StepMinProfitDuration)78778_storage": {
            "label": "struct IConfigStorage.StepMinProfitDuration",
            "members": [
              {
                "label": "fromSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "toSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minProfitDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(SwapConfig)78759_storage": {
            "label": "struct IConfigStorage.SwapConfig",
            "members": [
              {
                "label": "stablecoinSwapFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "swapFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TradingConfig)78768_storage": {
            "label": "struct IConfigStorage.TradingConfig",
            "members": [
              {
                "label": "fundingInterval",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "minProfitDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "devFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxPosition",
                "type": "t_uint8",
                "offset": 4,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bd8e985ddb687e7bb25bb888cd49e826fa7823088dd23397228df3506438aa83": {
      "address": "0x2F8ABc1F877B82bDd5b77eaEcC91b80e195C99eF",
      "txHash": "0x9fb0066fa8b3e86aadab91152f9cb2b841e8241785e4b64794047b8f1d2a24da",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:85"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:86"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:87"
          },
          {
            "label": "tradeHelper",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:88"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(Calculator)18251",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:89"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Calculator)18251": {
            "label": "contract Calculator",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4145c5d1528c118b7a64c0338bdd37c6398994232a180733f634ff4fecc96cc5": {
      "address": "0x1e3F4666523D0C5A7E59b20019d1D32Ca4d7ca80",
      "txHash": "0xbb21927f2e5c9ace33a63dc7f44207cd772730c18d8f0fdcab818b56c0dfda34",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:172"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:173"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:174"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(Calculator)17257",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:175"
          },
          {
            "label": "orderbookOracle",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(OrderbookOracle)51506",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:176"
          },
          {
            "label": "adaptiveFeeCalculator",
            "offset": 0,
            "slot": "156",
            "type": "t_contract(AdaptiveFeeCalculator)13200",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:177"
          },
          {
            "label": "maxAdaptiveFeeBps",
            "offset": 20,
            "slot": "156",
            "type": "t_uint32",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:178"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AdaptiveFeeCalculator)13200": {
            "label": "contract AdaptiveFeeCalculator",
            "numberOfBytes": "20"
          },
          "t_contract(Calculator)17257": {
            "label": "contract Calculator",
            "numberOfBytes": "20"
          },
          "t_contract(OrderbookOracle)51506": {
            "label": "contract OrderbookOracle",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a23c6d35e0808474c0d6c4a5f2c50bae1fe83d85861341b973b8b3b6d2393297": {
      "address": "0xf8C62134b796b45990ce0399825e559b0b04D904",
      "txHash": "0x0f0c86614f3d91d30a3f26c8334c3015dacae4111c45167b770f29d336a861c4",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:173"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:174"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:175"
          },
          {
            "label": "tradeHelper",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:176"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(ICalculator)19194",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:177"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ICalculator)19194": {
            "label": "contract ICalculator",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "205495793199e4121f168a254eb509d30bac16230ba6d7a418eb618299351a89": {
      "address": "0x86DD3d823b4bBbf60E23F87826Ca1E18f1B02231",
      "txHash": "0xebbf562c8bf74d47be9376a90bf1f6227067581cbad9369c045c3d3427389072",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "positionManagers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:74"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:75"
          },
          {
            "label": "liquidationService",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:76"
          },
          {
            "label": "crossMarginService",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:77"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:78"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "52daf65d141507ab5e61d432661fec8262298cc38c61544a8e904ce324a59c45": {
      "address": "0x128E93da2FF8542655922bF313c77069D52ba1DA",
      "txHash": "0x36409a13f3eaa60b6925d1e626432ed8d222bd6cd62ee5f7b9a085af6aae7be2",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:46"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:47"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:48"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:49"
          },
          {
            "label": "tradeHelper",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "780251328c432985234f73a0cc34d0edac4b510cdab837d7ada965f69c7be929": {
      "address": "0x4214916E2D2E0bd907F3719C8529F0A23F22892f",
      "txHash": "0xae520a034971b4fa0f6b366a3cc97c228722d5cb868babe0d9c720219c0d5163",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "globalState",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(GlobalState)79250_storage",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:36"
          },
          {
            "label": "positions",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_struct(Position)79307_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:38"
          },
          {
            "label": "subAccountPositionIds",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:39"
          },
          {
            "label": "subAccountBorrowingFee",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:40"
          },
          {
            "label": "markets",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_struct(Market)79284_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:41"
          },
          {
            "label": "assetClasses",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_uint256,t_struct(AssetClass)79261_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:42"
          },
          {
            "label": "serviceExecutors",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:43"
          },
          {
            "label": "activePositionIds",
            "offset": 0,
            "slot": "158",
            "type": "t_struct(Bytes32Set)10900_storage",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:45"
          },
          {
            "label": "activeSubAccounts",
            "offset": 0,
            "slot": "160",
            "type": "t_struct(AddressSet)11021_storage",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:46"
          },
          {
            "label": "epochVolumeBuy",
            "offset": 0,
            "slot": "162",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:48"
          },
          {
            "label": "epochVolumeSell",
            "offset": 0,
            "slot": "163",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:49"
          },
          {
            "label": "movingWindowLength",
            "offset": 0,
            "slot": "164",
            "type": "t_uint256",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:50"
          },
          {
            "label": "movingWindowInterval",
            "offset": 0,
            "slot": "165",
            "type": "t_uint256",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Position)79307_storage)": {
            "label": "mapping(bytes32 => struct IPerpStorage.Position)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AssetClass)79261_storage)": {
            "label": "mapping(uint256 => struct IPerpStorage.AssetClass)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Market)79284_storage)": {
            "label": "mapping(uint256 => struct IPerpStorage.Market)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)11021_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10706_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(AssetClass)79261_storage": {
            "label": "struct IPerpStorage.AssetClass",
            "members": [
              {
                "label": "reserveValueE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sumBorrowingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastBorrowingTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "sumBorrowingFeeE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "sumSettledBorrowingFeeE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Bytes32Set)10900_storage": {
            "label": "struct EnumerableSet.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10706_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(GlobalState)79250_storage": {
            "label": "struct IPerpStorage.GlobalState",
            "members": [
              {
                "label": "reserveValueE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Market)79284_storage": {
            "label": "struct IPerpStorage.Market",
            "members": [
              {
                "label": "longPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "longAccumSE",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "longAccumS2E",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "shortPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "shortAccumSE",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "shortAccumS2E",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "currentFundingRate",
                "type": "t_int256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "lastFundingTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "accumFundingLong",
                "type": "t_int256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "accumFundingShort",
                "type": "t_int256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "fundingAccrued",
                "type": "t_int256",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Position)79307_storage": {
            "label": "struct IPerpStorage.Position",
            "members": [
              {
                "label": "primaryAccount",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "marketIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "avgEntryPriceE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "entryBorrowingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "reserveValueE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lastIncreaseTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "positionSizeE30",
                "type": "t_int256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "realizedPnl",
                "type": "t_int256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "lastFundingAccrued",
                "type": "t_int256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "lastIncreaseSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Set)10706_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f8ffd2fc457cbae24f46d944c7769feba715d67e03988d75e921ee57b3c1cb43": {
      "address": "0x3ae391ECD03a3C2128F195CF9E61aDcd378A4396",
      "txHash": "0x05d0d06148a8324c038e994c44d59e5c32cf99c95c640c3ed9f040ee174e53c0",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "liquidityConfig",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(LiquidityConfig)79444_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:66"
          },
          {
            "label": "swapConfig",
            "offset": 0,
            "slot": "103",
            "type": "t_struct(SwapConfig)79449_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:67"
          },
          {
            "label": "tradingConfig",
            "offset": 0,
            "slot": "104",
            "type": "t_struct(TradingConfig)79458_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:68"
          },
          {
            "label": "liquidationConfig",
            "offset": 0,
            "slot": "107",
            "type": "t_struct(LiquidationConfig)79461_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:69"
          },
          {
            "label": "allowedLiquidators",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:71"
          },
          {
            "label": "serviceExecutors",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:72"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:74"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:75"
          },
          {
            "label": "hlp",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:76"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "113",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:77"
          },
          {
            "label": "pnlFactorBPS",
            "offset": 20,
            "slot": "113",
            "type": "t_uint32",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:78"
          },
          {
            "label": "minimumPositionSize",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:79"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "115",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:80"
          },
          {
            "label": "sglp",
            "offset": 0,
            "slot": "116",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:81"
          },
          {
            "label": "tokenAssetIds",
            "offset": 0,
            "slot": "117",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:84"
          },
          {
            "label": "assetConfigs",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_bytes32,t_struct(AssetConfig)79375_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:86"
          },
          {
            "label": "hlpAssetIds",
            "offset": 0,
            "slot": "119",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:88"
          },
          {
            "label": "assetHlpTokenConfigs",
            "offset": 0,
            "slot": "120",
            "type": "t_mapping(t_bytes32,t_struct(HLPTokenConfig)79384_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:89"
          },
          {
            "label": "collateralAssetIds",
            "offset": 0,
            "slot": "121",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:91"
          },
          {
            "label": "assetCollateralTokenConfigs",
            "offset": 0,
            "slot": "122",
            "type": "t_mapping(t_bytes32,t_struct(CollateralTokenConfig)79391_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:92"
          },
          {
            "label": "marketConfigs",
            "offset": 0,
            "slot": "123",
            "type": "t_array(t_struct(MarketConfig)79422_storage)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:94"
          },
          {
            "label": "assetClassConfigs",
            "offset": 0,
            "slot": "124",
            "type": "t_array(t_struct(AssetClassConfig)79425_storage)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:95"
          },
          {
            "label": "tradeServiceHooks",
            "offset": 0,
            "slot": "125",
            "type": "t_array(t_address)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:96"
          },
          {
            "label": "configExecutors",
            "offset": 0,
            "slot": "126",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:98"
          },
          {
            "label": "switchCollateralRouter",
            "offset": 0,
            "slot": "127",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:100"
          },
          {
            "label": "minProfitDurations",
            "offset": 0,
            "slot": "128",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:102"
          },
          {
            "label": "isAdaptiveFeeEnabledByMarketIndex",
            "offset": 0,
            "slot": "129",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:104"
          },
          {
            "label": "ybTokenOf",
            "offset": 0,
            "slot": "130",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:106"
          },
          {
            "label": "stepMinProfitDurations",
            "offset": 0,
            "slot": "131",
            "type": "t_array(t_struct(StepMinProfitDuration)79468_storage)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:108"
          },
          {
            "label": "isStepMinProfitEnabledByMarketIndex",
            "offset": 0,
            "slot": "132",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:109"
          },
          {
            "label": "takerFeeE8ByMarketIndex",
            "offset": 0,
            "slot": "133",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:112"
          },
          {
            "label": "makerFeeE8ByMarketIndex",
            "offset": 0,
            "slot": "134",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:113"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(AssetClassConfig)79425_storage)dyn_storage": {
            "label": "struct IConfigStorage.AssetClassConfig[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MarketConfig)79422_storage)dyn_storage": {
            "label": "struct IConfigStorage.MarketConfig[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(StepMinProfitDuration)79468_storage)dyn_storage": {
            "label": "struct IConfigStorage.StepMinProfitDuration[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AssetConfig)79375_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.AssetConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(CollateralTokenConfig)79391_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.CollateralTokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(HLPTokenConfig)79384_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.HLPTokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AssetClassConfig)79425_storage": {
            "label": "struct IConfigStorage.AssetClassConfig",
            "members": [
              {
                "label": "baseBorrowingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(AssetConfig)79375_storage": {
            "label": "struct IConfigStorage.AssetConfig",
            "members": [
              {
                "label": "tokenAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "assetId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "decimals",
                "type": "t_uint8",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isStableCoin",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(CollateralTokenConfig)79391_storage": {
            "label": "struct IConfigStorage.CollateralTokenConfig",
            "members": [
              {
                "label": "settleStrategy",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "collateralFactorBPS",
                "type": "t_uint32",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "accepted",
                "type": "t_bool",
                "offset": 24,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FundingRate)79396_storage": {
            "label": "struct IConfigStorage.FundingRate",
            "members": [
              {
                "label": "maxSkewScaleUSD",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxFundingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(HLPTokenConfig)79384_storage": {
            "label": "struct IConfigStorage.HLPTokenConfig",
            "members": [
              {
                "label": "targetWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "bufferLiquidity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxWeightDiff",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "accepted",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(LiquidationConfig)79461_storage": {
            "label": "struct IConfigStorage.LiquidationConfig",
            "members": [
              {
                "label": "liquidationFeeUSDE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LiquidityConfig)79444_storage": {
            "label": "struct IConfigStorage.LiquidityConfig",
            "members": [
              {
                "label": "hlpTotalTokenWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "hlpSafetyBufferBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taxFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "flashLoanFeeRateBPS",
                "type": "t_uint32",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "maxHLPUtilizationBPS",
                "type": "t_uint32",
                "offset": 12,
                "slot": "1"
              },
              {
                "label": "depositFeeRateBPS",
                "type": "t_uint32",
                "offset": 16,
                "slot": "1"
              },
              {
                "label": "withdrawFeeRateBPS",
                "type": "t_uint32",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "dynamicFeeEnabled",
                "type": "t_bool",
                "offset": 24,
                "slot": "1"
              },
              {
                "label": "enabled",
                "type": "t_bool",
                "offset": 25,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MarketConfig)79422_storage": {
            "label": "struct IConfigStorage.MarketConfig",
            "members": [
              {
                "label": "assetId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxLongPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxShortPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "increasePositionFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "decreasePositionFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "3"
              },
              {
                "label": "initialMarginFractionBPS",
                "type": "t_uint32",
                "offset": 8,
                "slot": "3"
              },
              {
                "label": "maintenanceMarginFractionBPS",
                "type": "t_uint32",
                "offset": 12,
                "slot": "3"
              },
              {
                "label": "maxProfitRateBPS",
                "type": "t_uint32",
                "offset": 16,
                "slot": "3"
              },
              {
                "label": "assetClass",
                "type": "t_uint8",
                "offset": 20,
                "slot": "3"
              },
              {
                "label": "allowIncreasePosition",
                "type": "t_bool",
                "offset": 21,
                "slot": "3"
              },
              {
                "label": "active",
                "type": "t_bool",
                "offset": 22,
                "slot": "3"
              },
              {
                "label": "fundingRate",
                "type": "t_struct(FundingRate)79396_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(StepMinProfitDuration)79468_storage": {
            "label": "struct IConfigStorage.StepMinProfitDuration",
            "members": [
              {
                "label": "fromSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "toSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minProfitDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(SwapConfig)79449_storage": {
            "label": "struct IConfigStorage.SwapConfig",
            "members": [
              {
                "label": "stablecoinSwapFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "swapFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TradingConfig)79458_storage": {
            "label": "struct IConfigStorage.TradingConfig",
            "members": [
              {
                "label": "fundingInterval",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "minProfitDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "devFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxPosition",
                "type": "t_uint8",
                "offset": 4,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "29cb464a548c1f58f36dab7d632135b4879350700f0f730dc2bdf2a34cdf9546": {
      "address": "0xEA04fB6B9fEb55D16647eca012c4e945ac506cAF",
      "txHash": "0x539423f4cea7c67f0a62c22346f8b620f3ee4f832c9ec51450f9863ffdf8a296",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:181"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:182"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:183"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(Calculator)18504",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:184"
          },
          {
            "label": "orderbookOracle",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(OrderbookOracle)54294",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:185"
          },
          {
            "label": "adaptiveFeeCalculator",
            "offset": 0,
            "slot": "156",
            "type": "t_contract(AdaptiveFeeCalculator)14284",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:186"
          },
          {
            "label": "maxAdaptiveFeeBps",
            "offset": 20,
            "slot": "156",
            "type": "t_uint32",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:187"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AdaptiveFeeCalculator)14284": {
            "label": "contract AdaptiveFeeCalculator",
            "numberOfBytes": "20"
          },
          "t_contract(Calculator)18504": {
            "label": "contract Calculator",
            "numberOfBytes": "20"
          },
          "t_contract(OrderbookOracle)54294": {
            "label": "contract OrderbookOracle",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0ae971b3b993deae077777b4b6cb2e36154b9883d95215aa6566840112bfbe98": {
      "address": "0x6539c8677BBCD223E06B5F4Eb64D243E54ac5c07",
      "txHash": "0xe25ba319c06ec6b1c88470d3510a5b357e290dc744e9f24ecd2d77c0f8032a4c",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:46"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:47"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:48"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:49"
          },
          {
            "label": "tradeHelper",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e4ff639edcbc1cc3187629110e50cb55a95cacf9501faf25de4b45b0644a22d6": {
      "address": "0x13F1880aB20DF760AfdE4E3eaA882560A08ADFf5",
      "txHash": "0xe2a0ba2eaf9983b987771408952881b41e827dff337947bb934c818f5b5c43d6",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(VaultStorage)79590",
            "contract": "GasService",
            "src": "src/services/GasService.sol:21"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(ConfigStorage)76848",
            "contract": "GasService",
            "src": "src/services/GasService.sol:22"
          },
          {
            "label": "executionFeeInUsd",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "GasService",
            "src": "src/services/GasService.sol:23"
          },
          {
            "label": "executionFeeTreasury",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "GasService",
            "src": "src/services/GasService.sol:24"
          },
          {
            "label": "subsidizedExecutionFeeValue",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "GasService",
            "src": "src/services/GasService.sol:25"
          },
          {
            "label": "waviedExecutionFeeMinTradeSize",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "GasService",
            "src": "src/services/GasService.sol:26"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ConfigStorage)76848": {
            "label": "contract ConfigStorage",
            "numberOfBytes": "20"
          },
          "t_contract(VaultStorage)79590": {
            "label": "contract VaultStorage",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "1182311411b6ea83fe0383dd8c71c7f587db15aa88a694cb62d80f8906d90705": {
      "address": "0x7d3b90c7Bc81a88E7d6368a54927e49770069Ac3",
      "txHash": "0x3aacc61c4629d4eee767a4d1e272a7ae0e9e43044a49a388517e81836d88e345",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "151",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "152",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "203",
            "type": "t_contract(IEcoPyth)57546",
            "contract": "IntentHandler",
            "src": "src/handlers/IntentHandler.sol:31"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(ConfigStorage)76848",
            "contract": "IntentHandler",
            "src": "src/handlers/IntentHandler.sol:32"
          },
          {
            "label": "tradeOrderHelper",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(TradeOrderHelper)44411",
            "contract": "IntentHandler",
            "src": "src/handlers/IntentHandler.sol:33"
          },
          {
            "label": "gasService",
            "offset": 0,
            "slot": "206",
            "type": "t_contract(GasService)61834",
            "contract": "IntentHandler",
            "src": "src/handlers/IntentHandler.sol:34"
          },
          {
            "label": "executedIntents",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "IntentHandler",
            "src": "src/handlers/IntentHandler.sol:35"
          },
          {
            "label": "intentExecutors",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "IntentHandler",
            "src": "src/handlers/IntentHandler.sol:36"
          },
          {
            "label": "delegations",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_address)",
            "contract": "IntentHandler",
            "src": "src/handlers/IntentHandler.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ConfigStorage)76848": {
            "label": "contract ConfigStorage",
            "numberOfBytes": "20"
          },
          "t_contract(GasService)61834": {
            "label": "contract GasService",
            "numberOfBytes": "20"
          },
          "t_contract(IEcoPyth)57546": {
            "label": "contract IEcoPyth",
            "numberOfBytes": "20"
          },
          "t_contract(TradeOrderHelper)44411": {
            "label": "contract TradeOrderHelper",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f86c96f1f8f6d4a656ff4076e75c6f36927329929c0090dd2b79fd388f44eec2": {
      "address": "0xB68a03E54ee50330848d744d6FC02e56F1932956",
      "txHash": "0xf6f8e0a815fa97da13d5d5668c4879b62e32f54df8ea5ff54581f98299458250",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "_HASHED_NAME",
            "offset": 0,
            "slot": "151",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol:32"
          },
          {
            "label": "_HASHED_VERSION",
            "offset": 0,
            "slot": "152",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "153",
            "type": "t_array(t_uint256)50_storage",
            "contract": "EIP712Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/EIP712Upgradeable.sol:120"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "203",
            "type": "t_contract(IEcoPyth)57596",
            "contract": "IntentHandler",
            "src": "src/handlers/IntentHandler.sol:31"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "204",
            "type": "t_contract(ConfigStorage)76975",
            "contract": "IntentHandler",
            "src": "src/handlers/IntentHandler.sol:32"
          },
          {
            "label": "tradeOrderHelper",
            "offset": 0,
            "slot": "205",
            "type": "t_contract(TradeOrderHelper)44461",
            "contract": "IntentHandler",
            "src": "src/handlers/IntentHandler.sol:33"
          },
          {
            "label": "gasService",
            "offset": 0,
            "slot": "206",
            "type": "t_contract(GasService)61950",
            "contract": "IntentHandler",
            "src": "src/handlers/IntentHandler.sol:34"
          },
          {
            "label": "executedIntents",
            "offset": 0,
            "slot": "207",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "IntentHandler",
            "src": "src/handlers/IntentHandler.sol:35"
          },
          {
            "label": "intentExecutors",
            "offset": 0,
            "slot": "208",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "IntentHandler",
            "src": "src/handlers/IntentHandler.sol:36"
          },
          {
            "label": "delegations",
            "offset": 0,
            "slot": "209",
            "type": "t_mapping(t_address,t_address)",
            "contract": "IntentHandler",
            "src": "src/handlers/IntentHandler.sol:37"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ConfigStorage)76975": {
            "label": "contract ConfigStorage",
            "numberOfBytes": "20"
          },
          "t_contract(GasService)61950": {
            "label": "contract GasService",
            "numberOfBytes": "20"
          },
          "t_contract(IEcoPyth)57596": {
            "label": "contract IEcoPyth",
            "numberOfBytes": "20"
          },
          "t_contract(TradeOrderHelper)44461": {
            "label": "contract TradeOrderHelper",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "c01d07c52dc0149798239efb33e6dadd7b5bc0b6709eca4a0716274f0c9987e0": {
      "address": "0x615e304DB8E67592795935Fc0C40eAceb198B191",
      "txHash": "0x1e12834fad8128eb0e642b85a2d8197893769299a17a50500d73b3559a434667",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(VaultStorage)79717",
            "contract": "GasService",
            "src": "src/services/GasService.sol:21"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(ConfigStorage)76975",
            "contract": "GasService",
            "src": "src/services/GasService.sol:22"
          },
          {
            "label": "executionFeeInUsd",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "GasService",
            "src": "src/services/GasService.sol:23"
          },
          {
            "label": "executionFeeTreasury",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "GasService",
            "src": "src/services/GasService.sol:24"
          },
          {
            "label": "subsidizedExecutionFeeValue",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "GasService",
            "src": "src/services/GasService.sol:25"
          },
          {
            "label": "waviedExecutionFeeMinTradeSize",
            "offset": 0,
            "slot": "156",
            "type": "t_uint256",
            "contract": "GasService",
            "src": "src/services/GasService.sol:26"
          },
          {
            "label": "gasTokenAssetId",
            "offset": 0,
            "slot": "157",
            "type": "t_bytes32",
            "contract": "GasService",
            "src": "src/services/GasService.sol:27"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(ConfigStorage)76975": {
            "label": "contract ConfigStorage",
            "numberOfBytes": "20"
          },
          "t_contract(VaultStorage)79717": {
            "label": "contract VaultStorage",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fab6888501188ec36597eb7ad5d0ecb264bd07cd95c7a09713e356958a1da878": {
      "address": "0x0a3d3E9fa80a551AD3BFA4D0Eb1cdAf3638Fc7dA",
      "txHash": "0xb49e9f386b66a91f0c1376c93025667ea368d61c4226bf84711db017a636c71e",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "positionManagers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:74"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:75"
          },
          {
            "label": "liquidationService",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:76"
          },
          {
            "label": "crossMarginService",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:77"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:78"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
