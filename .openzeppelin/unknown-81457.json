{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xeCF1C3dA8bd9B5b164f2acfe91eEC8Eb2C4cEbA9",
    "txHash": "0x789702f2fb09fcac87514ba499f0ae989c3460ec1ccddf98aa79b5513c4290f9"
  },
  "proxies": [
    {
      "address": "0x06d35ecf6A2799f99482c6F15f146326Dd0FF1C6",
      "txHash": "0x145dd6b0be55317e7bc960126c8f1dc68014246ce44d1de627071ce3100316d4",
      "kind": "transparent"
    },
    {
      "address": "0x34338314236df25220b55F90F7E8Fc30B620D242",
      "txHash": "0x85e22c41a1f410bfc33bcbd99e07dd3a436c196f60135be578d97519f90a2b04",
      "kind": "transparent"
    },
    {
      "address": "0x9F09b53ee28a93951fe546dEfB24C0f908eEda22",
      "txHash": "0x4f93e3c37bbb0ebb3a6a3efc04282aecb4393c49934d6d84cb988abe8b6ec3df",
      "kind": "transparent"
    },
    {
      "address": "0x9c83e1046dA4727F05C6764c017C6E1757596592",
      "txHash": "0x280be18ea7b9665d48032543af8eb723fad4943ea8057d7ef38c82e7601be922",
      "kind": "transparent"
    },
    {
      "address": "0xF4F7123fFe42c4C90A4bCDD2317D397E0B7d7cc0",
      "txHash": "0x1267ed1421c7a3423996728daa8bc96e173068b09fc62c063415ef8cfc53108c",
      "kind": "transparent"
    },
    {
      "address": "0x97e94BdA44a2Df784Ab6535aaE2D62EFC6D2e303",
      "txHash": "0xe886e7a401110331e3b37626303dab7fe0d06a720afe27894904d258180a0047",
      "kind": "transparent"
    },
    {
      "address": "0x4307fbDCD9Ec7AEA5a1c2958deCaa6f316952bAb",
      "txHash": "0x1393d8c652534018ff9726cd6c7e9ac60ad826981665d8490bcc06a530f12c37",
      "kind": "transparent"
    },
    {
      "address": "0x9F1f13eBC178122C3ef6c14FA3A523680563F58b",
      "txHash": "0x571525ce103a0be1cafd7cb7c69923c6867e4aa2986424954aee406bd73831c9",
      "kind": "transparent"
    },
    {
      "address": "0x0b71cBBAd974B9DF8BDF6A83973B710AAa48e7ac",
      "txHash": "0x921e1bc96954f0aebaf854ee39ee3869914e7f2be911c80ab7b8d3c867a2a1e0",
      "kind": "transparent"
    },
    {
      "address": "0x963Cbe4cFcDC58795869be74b80A328b022DE00C",
      "txHash": "0xec38d7ebb20fa426962f42f9f26b01e5a2b4973a2f6b42e839c8d7e7b21fa65b",
      "kind": "transparent"
    },
    {
      "address": "0xF0D92907236418Fa8Ee900E384b4c6928f7cADfc",
      "txHash": "0x0f5946739999ae161d7e885e58171cf4b4d30fe2b71d12534ccf57f85f22cc9b",
      "kind": "transparent"
    },
    {
      "address": "0x0a8D9c0A4a039dDe3Cb825fF4c2f063f8B54313A",
      "txHash": "0x974bb72d67e1927da6b09374cb920490d9f1afae792a7188513fddd7b6d9c86e",
      "kind": "transparent"
    },
    {
      "address": "0x34E89DEd96340A177856fD822366AfC584438750",
      "txHash": "0xfdc9e5f1a4cc4376c3f8e0eee7d24afe2dddfb000403a3c5fae675df0b151dd1",
      "kind": "transparent"
    },
    {
      "address": "0xE7D96684A56e60ffBAAe0fC0683879da48daB383",
      "txHash": "0xf81855fe738e26df51e7c56d7d522356f10860d4f2d371e48c424c77d4b7c22d",
      "kind": "transparent"
    },
    {
      "address": "0xcf533D0eEFB072D1BB68e201EAFc5368764daA0E",
      "txHash": "0x76bfc4038c29e31ebac1e0f63e05d25201ebddf30eb77dd261eb6e82a47a0926",
      "kind": "transparent"
    },
    {
      "address": "0xB189532c581afB4Fbe69aF6dC3CD36769525d446",
      "txHash": "0xb75cc5b1f27725889d486a015dbf5aa013e9b50a68bc9b7816faf646ca217425",
      "kind": "transparent"
    },
    {
      "address": "0x04979ee0d378ec830e087301d4d1454Bb75066e1",
      "txHash": "0x0e8ccdeee1d0906048680c9a5fed7e0ae348b782c053106cd6daf9a988f040d7",
      "kind": "transparent"
    },
    {
      "address": "0xc2c45a6d0FD1A74888aAE64a45144165fB90e109",
      "txHash": "0x0c178029f5a37ed277adb0fdf30b8010dd668ae69cd05663516e3d96cfcbd809",
      "kind": "transparent"
    },
    {
      "address": "0x59109bC04C1DE0AB4a5eFA59F31B8C8800182BA4",
      "txHash": "0xd1637896bfe0fb56af2b09e7cf5b8cf68ea6f34884763cb85cb46395ac4a7450",
      "kind": "transparent"
    },
    {
      "address": "0x9302624e5A7079b892296d39e6e969790CDeE19b",
      "txHash": "0x95bb26614b091d873ff53931eb58589265d1140a8b68f96d090bd4b6010887e8",
      "kind": "transparent"
    },
    {
      "address": "0x7d975c289598E13dc95E48D04042F106e8d6d06a",
      "txHash": "0x0c91a77c45d0fbde1d40ca77cb168d045905e24c8650c5c63e61ac7f177e1813",
      "kind": "transparent"
    }
  ],
  "impls": {
    "8f1b61670603faac415cc98d7113e22ea9850f1437c3433808fc309557ffdca3": {
      "address": "0x2E7983f9A1D08c57989eEA20adC9242321dA6589",
      "txHash": "0xc86e40a96d435afe61d69a41570ea7286c645f1103ed56da3ff422f16606e7bb",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IReadablePyth)56505",
            "contract": "PythAdapter",
            "src": "src/oracles/PythAdapter.sol:21"
          },
          {
            "label": "configs",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_bytes32,t_struct(PythPriceConfig)56457_storage)",
            "contract": "PythAdapter",
            "src": "src/oracles/PythAdapter.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IReadablePyth)56505": {
            "label": "contract IReadablePyth",
            "numberOfBytes": "20"
          },
          "t_mapping(t_bytes32,t_struct(PythPriceConfig)56457_storage)": {
            "label": "mapping(bytes32 => struct IPythAdapter.PythPriceConfig)",
            "numberOfBytes": "32"
          },
          "t_struct(PythPriceConfig)56457_storage": {
            "label": "struct IPythAdapter.PythPriceConfig",
            "members": [
              {
                "label": "pythPriceId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "inverse",
                "type": "t_bool",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "112fccf81852ba0a0c671b3429474940a3a3afd58d397ba1ffa37040a6424514": {
      "address": "0x8BFE7Bb65Dca1ebDA3608E0FA7c8feE7E0913a85",
      "txHash": "0xf1a7ce2ac48295464f5c4c0fc732283884a2ff12b6797dc688732a5c9d197bf2",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "isUpdater",
            "offset": 0,
            "slot": "101",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "OracleMiddleware",
            "src": "src/oracles/OracleMiddleware.sol:50"
          },
          {
            "label": "assetPriceConfigs",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_bytes32,t_struct(AssetPriceConfig)51268_storage)",
            "contract": "OracleMiddleware",
            "src": "src/oracles/OracleMiddleware.sol:51"
          },
          {
            "label": "marketStatus",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_bytes32,t_uint8)",
            "contract": "OracleMiddleware",
            "src": "src/oracles/OracleMiddleware.sol:63"
          },
          {
            "label": "maxTrustPriceAge",
            "offset": 0,
            "slot": "104",
            "type": "t_uint256",
            "contract": "OracleMiddleware",
            "src": "src/oracles/OracleMiddleware.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AssetPriceConfig)51268_storage)": {
            "label": "mapping(bytes32 => struct OracleMiddleware.AssetPriceConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint8)": {
            "label": "mapping(bytes32 => uint8)",
            "numberOfBytes": "32"
          },
          "t_struct(AssetPriceConfig)51268_storage": {
            "label": "struct OracleMiddleware.AssetPriceConfig",
            "members": [
              {
                "label": "trustPriceAge",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "confidenceThresholdE6",
                "type": "t_uint32",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "adapter",
                "type": "t_address",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "2efdb8026f95dc7300cf4df7254bf0dd044d6575a309a56a7d80edccb616c3bf": {
      "address": "0x0650b4B0Bc6C032b69Bd5C0b15496f6555c0Ec98",
      "txHash": "0xc204f502f221514d5736ee26402c2357c5c40a4d63eb580c02cf804fc2087be7",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "liquidityConfig",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(LiquidityConfig)77828_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:64"
          },
          {
            "label": "swapConfig",
            "offset": 0,
            "slot": "103",
            "type": "t_struct(SwapConfig)77833_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:65"
          },
          {
            "label": "tradingConfig",
            "offset": 0,
            "slot": "104",
            "type": "t_struct(TradingConfig)77842_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:66"
          },
          {
            "label": "liquidationConfig",
            "offset": 0,
            "slot": "107",
            "type": "t_struct(LiquidationConfig)77845_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:67"
          },
          {
            "label": "allowedLiquidators",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:69"
          },
          {
            "label": "serviceExecutors",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:70"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:72"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:73"
          },
          {
            "label": "hlp",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:74"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "113",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:75"
          },
          {
            "label": "pnlFactorBPS",
            "offset": 20,
            "slot": "113",
            "type": "t_uint32",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:76"
          },
          {
            "label": "minimumPositionSize",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:77"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "115",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:78"
          },
          {
            "label": "sglp",
            "offset": 0,
            "slot": "116",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:79"
          },
          {
            "label": "tokenAssetIds",
            "offset": 0,
            "slot": "117",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:82"
          },
          {
            "label": "assetConfigs",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_bytes32,t_struct(AssetConfig)77759_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:84"
          },
          {
            "label": "hlpAssetIds",
            "offset": 0,
            "slot": "119",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:86"
          },
          {
            "label": "assetHlpTokenConfigs",
            "offset": 0,
            "slot": "120",
            "type": "t_mapping(t_bytes32,t_struct(HLPTokenConfig)77768_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:87"
          },
          {
            "label": "collateralAssetIds",
            "offset": 0,
            "slot": "121",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:89"
          },
          {
            "label": "assetCollateralTokenConfigs",
            "offset": 0,
            "slot": "122",
            "type": "t_mapping(t_bytes32,t_struct(CollateralTokenConfig)77775_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:90"
          },
          {
            "label": "marketConfigs",
            "offset": 0,
            "slot": "123",
            "type": "t_array(t_struct(MarketConfig)77806_storage)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:92"
          },
          {
            "label": "assetClassConfigs",
            "offset": 0,
            "slot": "124",
            "type": "t_array(t_struct(AssetClassConfig)77809_storage)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:93"
          },
          {
            "label": "tradeServiceHooks",
            "offset": 0,
            "slot": "125",
            "type": "t_array(t_address)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:94"
          },
          {
            "label": "configExecutors",
            "offset": 0,
            "slot": "126",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:96"
          },
          {
            "label": "switchCollateralRouter",
            "offset": 0,
            "slot": "127",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:98"
          },
          {
            "label": "minProfitDurations",
            "offset": 0,
            "slot": "128",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:100"
          },
          {
            "label": "isAdaptiveFeeEnabledByMarketIndex",
            "offset": 0,
            "slot": "129",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:102"
          },
          {
            "label": "ybTokenOf",
            "offset": 0,
            "slot": "130",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:104"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(AssetClassConfig)77809_storage)dyn_storage": {
            "label": "struct IConfigStorage.AssetClassConfig[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MarketConfig)77806_storage)dyn_storage": {
            "label": "struct IConfigStorage.MarketConfig[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AssetConfig)77759_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.AssetConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(CollateralTokenConfig)77775_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.CollateralTokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(HLPTokenConfig)77768_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.HLPTokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AssetClassConfig)77809_storage": {
            "label": "struct IConfigStorage.AssetClassConfig",
            "members": [
              {
                "label": "baseBorrowingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(AssetConfig)77759_storage": {
            "label": "struct IConfigStorage.AssetConfig",
            "members": [
              {
                "label": "tokenAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "assetId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "decimals",
                "type": "t_uint8",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isStableCoin",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(CollateralTokenConfig)77775_storage": {
            "label": "struct IConfigStorage.CollateralTokenConfig",
            "members": [
              {
                "label": "settleStrategy",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "collateralFactorBPS",
                "type": "t_uint32",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "accepted",
                "type": "t_bool",
                "offset": 24,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FundingRate)77780_storage": {
            "label": "struct IConfigStorage.FundingRate",
            "members": [
              {
                "label": "maxSkewScaleUSD",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxFundingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(HLPTokenConfig)77768_storage": {
            "label": "struct IConfigStorage.HLPTokenConfig",
            "members": [
              {
                "label": "targetWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "bufferLiquidity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxWeightDiff",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "accepted",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(LiquidationConfig)77845_storage": {
            "label": "struct IConfigStorage.LiquidationConfig",
            "members": [
              {
                "label": "liquidationFeeUSDE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LiquidityConfig)77828_storage": {
            "label": "struct IConfigStorage.LiquidityConfig",
            "members": [
              {
                "label": "hlpTotalTokenWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "hlpSafetyBufferBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taxFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "flashLoanFeeRateBPS",
                "type": "t_uint32",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "maxHLPUtilizationBPS",
                "type": "t_uint32",
                "offset": 12,
                "slot": "1"
              },
              {
                "label": "depositFeeRateBPS",
                "type": "t_uint32",
                "offset": 16,
                "slot": "1"
              },
              {
                "label": "withdrawFeeRateBPS",
                "type": "t_uint32",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "dynamicFeeEnabled",
                "type": "t_bool",
                "offset": 24,
                "slot": "1"
              },
              {
                "label": "enabled",
                "type": "t_bool",
                "offset": 25,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MarketConfig)77806_storage": {
            "label": "struct IConfigStorage.MarketConfig",
            "members": [
              {
                "label": "assetId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxLongPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxShortPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "increasePositionFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "decreasePositionFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "3"
              },
              {
                "label": "initialMarginFractionBPS",
                "type": "t_uint32",
                "offset": 8,
                "slot": "3"
              },
              {
                "label": "maintenanceMarginFractionBPS",
                "type": "t_uint32",
                "offset": 12,
                "slot": "3"
              },
              {
                "label": "maxProfitRateBPS",
                "type": "t_uint32",
                "offset": 16,
                "slot": "3"
              },
              {
                "label": "assetClass",
                "type": "t_uint8",
                "offset": 20,
                "slot": "3"
              },
              {
                "label": "allowIncreasePosition",
                "type": "t_bool",
                "offset": 21,
                "slot": "3"
              },
              {
                "label": "active",
                "type": "t_bool",
                "offset": 22,
                "slot": "3"
              },
              {
                "label": "fundingRate",
                "type": "t_struct(FundingRate)77780_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(SwapConfig)77833_storage": {
            "label": "struct IConfigStorage.SwapConfig",
            "members": [
              {
                "label": "stablecoinSwapFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "swapFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TradingConfig)77842_storage": {
            "label": "struct IConfigStorage.TradingConfig",
            "members": [
              {
                "label": "fundingInterval",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "minProfitDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "devFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxPosition",
                "type": "t_uint8",
                "offset": 4,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "d23fda4d90eb8e43d05697d543505b00b5566ecdb685cbec8872eff94eac7677": {
      "address": "0xc665241885e6b49D74D042462d3328E37Ca87244",
      "txHash": "0x71d7ca1668998f1b35ba515591c87827eb6c146ddd3fe8dbadf02d5c23d8974c",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "globalState",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(GlobalState)78279_storage",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:36"
          },
          {
            "label": "positions",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_struct(Position)78334_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:38"
          },
          {
            "label": "subAccountPositionIds",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:39"
          },
          {
            "label": "subAccountBorrowingFee",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:40"
          },
          {
            "label": "markets",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_struct(Market)78313_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:41"
          },
          {
            "label": "assetClasses",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_uint256,t_struct(AssetClass)78290_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:42"
          },
          {
            "label": "serviceExecutors",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:43"
          },
          {
            "label": "activePositionIds",
            "offset": 0,
            "slot": "158",
            "type": "t_struct(Bytes32Set)10900_storage",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:45"
          },
          {
            "label": "activeSubAccounts",
            "offset": 0,
            "slot": "160",
            "type": "t_struct(AddressSet)11021_storage",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:46"
          },
          {
            "label": "epochVolumeBuy",
            "offset": 0,
            "slot": "162",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:48"
          },
          {
            "label": "epochVolumeSell",
            "offset": 0,
            "slot": "163",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:49"
          },
          {
            "label": "movingWindowLength",
            "offset": 0,
            "slot": "164",
            "type": "t_uint256",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:50"
          },
          {
            "label": "movingWindowInterval",
            "offset": 0,
            "slot": "165",
            "type": "t_uint256",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Position)78334_storage)": {
            "label": "mapping(bytes32 => struct IPerpStorage.Position)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AssetClass)78290_storage)": {
            "label": "mapping(uint256 => struct IPerpStorage.AssetClass)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Market)78313_storage)": {
            "label": "mapping(uint256 => struct IPerpStorage.Market)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)11021_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10706_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(AssetClass)78290_storage": {
            "label": "struct IPerpStorage.AssetClass",
            "members": [
              {
                "label": "reserveValueE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sumBorrowingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastBorrowingTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "sumBorrowingFeeE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "sumSettledBorrowingFeeE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Bytes32Set)10900_storage": {
            "label": "struct EnumerableSet.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10706_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(GlobalState)78279_storage": {
            "label": "struct IPerpStorage.GlobalState",
            "members": [
              {
                "label": "reserveValueE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Market)78313_storage": {
            "label": "struct IPerpStorage.Market",
            "members": [
              {
                "label": "longPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "longAccumSE",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "longAccumS2E",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "shortPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "shortAccumSE",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "shortAccumS2E",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "currentFundingRate",
                "type": "t_int256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "lastFundingTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "accumFundingLong",
                "type": "t_int256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "accumFundingShort",
                "type": "t_int256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "fundingAccrued",
                "type": "t_int256",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Position)78334_storage": {
            "label": "struct IPerpStorage.Position",
            "members": [
              {
                "label": "primaryAccount",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "marketIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "avgEntryPriceE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "entryBorrowingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "reserveValueE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lastIncreaseTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "positionSizeE30",
                "type": "t_int256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "realizedPnl",
                "type": "t_int256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "lastFundingAccrued",
                "type": "t_int256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Set)10706_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e7a1d4f502eb4b0cc1043525aff02d40d14fc04ee4fcd86dbbef9f965cb23bb5": {
      "address": "0x57310D6B7695acaccf3b40278A4A42249d4C4604",
      "txHash": "0xfa967de9ebb30d00096dc2596c22032a75b846ece9039d5c5d6d93f9fdbdd55a",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "154",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "155",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/ERC20Upgradeable.sol:400"
          },
          {
            "label": "minters",
            "offset": 0,
            "slot": "201",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "HLP",
            "src": "src/contracts/HLP.sol:15"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f2712e80a726c62b5009ae60548e4e155bb6d1689ba4b8c83df07810ce03ce64": {
      "address": "0x99Af94F56a6f921c027B817c2905C0BABD470586",
      "txHash": "0xcdd88ee6a1ee01232a9623afd17742156a4be50beafcf583d2994a19c5ae68c9",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "totalAmount",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:47"
          },
          {
            "label": "hlpLiquidity",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:48"
          },
          {
            "label": "protocolFees",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:49"
          },
          {
            "label": "hlpLiquidityDebtUSDE30",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:51"
          },
          {
            "label": "fundingFeeReserve",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:52"
          },
          {
            "label": "devFees",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:54"
          },
          {
            "label": "tradingFeeDebt",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:56"
          },
          {
            "label": "borrowingFeeDebt",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:57"
          },
          {
            "label": "fundingFeeDebt",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:58"
          },
          {
            "label": "lossDebt",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:59"
          },
          {
            "label": "globalTradingFeeDebt",
            "offset": 0,
            "slot": "161",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:61"
          },
          {
            "label": "globalBorrowingFeeDebt",
            "offset": 0,
            "slot": "162",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:62"
          },
          {
            "label": "globalFundingFeeDebt",
            "offset": 0,
            "slot": "163",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:63"
          },
          {
            "label": "globalLossDebt",
            "offset": 0,
            "slot": "164",
            "type": "t_uint256",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:64"
          },
          {
            "label": "traderBalances",
            "offset": 0,
            "slot": "165",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:67"
          },
          {
            "label": "traderTokens",
            "offset": 0,
            "slot": "166",
            "type": "t_mapping(t_address,t_array(t_address)dyn_storage)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:69"
          },
          {
            "label": "strategyAllowances",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:71"
          },
          {
            "label": "serviceExecutors",
            "offset": 0,
            "slot": "168",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:73"
          },
          {
            "label": "strategyFunctionSigAllowances",
            "offset": 0,
            "slot": "169",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bytes4))",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:75"
          },
          {
            "label": "hlpLiquidityOnHold",
            "offset": 0,
            "slot": "170",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "VaultStorage",
            "src": "src/storages/VaultStorage.sol:77"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes4": {
            "label": "bytes4",
            "numberOfBytes": "4"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_address)dyn_storage)": {
            "label": "mapping(address => address[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes4)": {
            "label": "mapping(address => bytes4)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_address))": {
            "label": "mapping(address => mapping(address => address))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bytes4))": {
            "label": "mapping(address => mapping(address => bytes4))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0dbf7eb246876702ce56d7684aa3f82632203f90143e0f02a1be13638207be00": {
      "address": "0xfA0B82bE3C88F22cCf35cdEa66c6e5f9C4De8799",
      "txHash": "0x4aa0f3c03dc864c804ac5543ded96cbb0bfeb6c99c33fcd99fff000c824f2abb",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:46"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:47"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:48"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:49"
          },
          {
            "label": "tradeHelper",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "656cd8bd70758c6f4f737925a44101193ed19948c208838e744b096796193619": {
      "address": "0x72399114898019Bace477623605D33a804437633",
      "txHash": "0x3af6a9ae27527c9690587fe202d25bdcba42ea727d69e97701fb2f6d4136545d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:172"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:173"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:174"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(Calculator)17444",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:175"
          },
          {
            "label": "orderbookOracle",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(OrderbookOracle)52807",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:176"
          },
          {
            "label": "adaptiveFeeCalculator",
            "offset": 0,
            "slot": "156",
            "type": "t_contract(AdaptiveFeeCalculator)13673",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:177"
          },
          {
            "label": "maxAdaptiveFeeBps",
            "offset": 20,
            "slot": "156",
            "type": "t_uint32",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:178"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AdaptiveFeeCalculator)13673": {
            "label": "contract AdaptiveFeeCalculator",
            "numberOfBytes": "20"
          },
          "t_contract(Calculator)17444": {
            "label": "contract Calculator",
            "numberOfBytes": "20"
          },
          "t_contract(OrderbookOracle)52807": {
            "label": "contract OrderbookOracle",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "246ca300c09a912c8bfcfc4221785f432774123d6c2ed63af17ff9980c1a8b04": {
      "address": "0x2D1F1Bec308AFd21B8a4D2aE5233Ef7241914416",
      "txHash": "0x8fb5a594cbc376ff25e48290b79d57c0b51489cbf294316cf3d0cfdb362d1923",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:81"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:82"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:83"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:84"
          },
          {
            "label": "tradeHelper",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "CrossMarginService",
            "src": "src/services/CrossMarginService.sol:85"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6b26dcc867af86e9f90526b2bc12af2bc31a326b3900321bcfca1416aa051c77": {
      "address": "0xFB3b755Be8647589f03c5F647556D7E35db9438b",
      "txHash": "0xa537dccdf411c787893b34e341b9b1b134bc53491173cc6670571f69c5585dd0",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:105"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:106"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:107"
          },
          {
            "label": "tradeHelper",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:108"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(Calculator)17444",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:109"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Calculator)17444": {
            "label": "contract Calculator",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "288f5adfccacedbc37c4a46049de0b6e7c141bedc0cc86faf056244e69ad0392": {
      "address": "0x642DCcee2C90986A7472510A6a4E1f4126A76432",
      "txHash": "0x7403c62dcb3df212697051c61668a08d8acfff7e8b24e13c5fa0e5337d7dea7a",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "LiquidityService",
            "src": "src/services/LiquidityService.sol:77"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LiquidityService",
            "src": "src/services/LiquidityService.sol:78"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "LiquidityService",
            "src": "src/services/LiquidityService.sol:79"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ab789b46099b58cdbc94b7dcadf2235ac43e04ea45d9d4c5bff3f1806ee42fbb": {
      "address": "0xe987804f83cDc413524Eed4d8bC59F32912e123D",
      "txHash": "0x0207c01f2145566f61c9e891e2f3f976642cabb96d3f7800ae6a1b4d4fa073cb",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:173"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:174"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:175"
          },
          {
            "label": "tradeHelper",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:176"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(ICalculator)18366",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:177"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ICalculator)18366": {
            "label": "contract ICalculator",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "0648b6d0b66eb4ef7fbd4d8651a9b7ff98facfa3bfcc9d55bcb8f752932eff06": {
      "address": "0x5bb83667E29EF15F141256eEc189e60B0C18DB14",
      "txHash": "0x4b08a2b8a74486578d632e6fb422159e4f6d18d452ae93eb8a1f83f3d9c77101",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "positionManagers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:74"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:75"
          },
          {
            "label": "liquidationService",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:76"
          },
          {
            "label": "crossMarginService",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:77"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:78"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4d5f8ccd50ba3e3983278a01a193daa5d7faf788ab9c563648287e24a8dd1c57": {
      "address": "0x6A69561199E01E5E76eA53A59aD804d919e30BA8",
      "txHash": "0xe36e74318c78e97796274bbbf486ae7f292c973736f735da7a09002a14d31753",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "crossMarginService",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:94"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:95"
          },
          {
            "label": "nextExecutionOrderIndex",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:96"
          },
          {
            "label": "minExecutionOrderFee",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:97"
          },
          {
            "label": "maxExecutionChuck",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:98"
          },
          {
            "label": "withdrawOrders",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_struct(WithdrawOrder)37515_storage)dyn_storage",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:100"
          },
          {
            "label": "subAccountExecutedWithdrawOrders",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_array(t_struct(WithdrawOrder)37515_storage)dyn_storage)",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:101"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:102"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(WithdrawOrder)37515_storage)dyn_storage": {
            "label": "struct ICrossMarginHandler.WithdrawOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CrossMarginService)60092": {
            "label": "contract CrossMarginService",
            "numberOfBytes": "20"
          },
          "t_enum(WithdrawOrderStatus)37490": {
            "label": "enum ICrossMarginHandler.WithdrawOrderStatus",
            "members": [
              "PENDING",
              "SUCCESS",
              "FAIL"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(WithdrawOrder)37515_storage)dyn_storage)": {
            "label": "mapping(address => struct ICrossMarginHandler.WithdrawOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawOrder)37515_storage": {
            "label": "struct ICrossMarginHandler.WithdrawOrder",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint48",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "executedTimestamp",
                "type": "t_uint48",
                "offset": 6,
                "slot": "3"
              },
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 12,
                "slot": "3"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "crossMarginService",
                "type": "t_contract(CrossMarginService)60092",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "status",
                "type": "t_enum(WithdrawOrderStatus)37490",
                "offset": 21,
                "slot": "5"
              },
              {
                "label": "shouldUnwrap",
                "type": "t_bool",
                "offset": 22,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bcbd86c5ddd129003aa1992dfcef7ec38ab0f6ad01c17f4a2242a2afb06cab40": {
      "address": "0xc60b2f883bB9Fa9255394B61B2cAB86143cF6354",
      "txHash": "0x5a501c03cdbc236e3e42ec6ca483f8d0c4f7f1fb903f6b3994e4affa20d8805b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IEcoPyth)56582",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:161"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:162"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:163"
          },
          {
            "label": "senderOverride",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:164"
          },
          {
            "label": "minExecutionFee",
            "offset": 20,
            "slot": "154",
            "type": "t_uint64",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:166"
          },
          {
            "label": "minExecutionTimestamp",
            "offset": 28,
            "slot": "154",
            "type": "t_uint32",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:167"
          },
          {
            "label": "isAllowAllExecutor",
            "offset": 0,
            "slot": "155",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:168"
          },
          {
            "label": "isGuaranteeLimitPrice",
            "offset": 1,
            "slot": "155",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:169"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:171"
          },
          {
            "label": "limitOrders",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)38372_storage))",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:172"
          },
          {
            "label": "limitOrdersIndex",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:173"
          },
          {
            "label": "delegations",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_address)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:174"
          },
          {
            "label": "activeOrderPointers",
            "offset": 0,
            "slot": "160",
            "type": "t_struct(UintSet)11178_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:177"
          },
          {
            "label": "activeMarketOrderPointers",
            "offset": 0,
            "slot": "162",
            "type": "t_struct(UintSet)11178_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:178"
          },
          {
            "label": "activeLimitOrderPointers",
            "offset": 0,
            "slot": "164",
            "type": "t_struct(UintSet)11178_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:179"
          },
          {
            "label": "subAccountActiveOrderPointers",
            "offset": 0,
            "slot": "166",
            "type": "t_mapping(t_address,t_struct(UintSet)11178_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:181"
          },
          {
            "label": "subAccountActiveMarketOrderPointers",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_address,t_struct(UintSet)11178_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:182"
          },
          {
            "label": "subAccountActiveLimitOrderPointers",
            "offset": 0,
            "slot": "168",
            "type": "t_mapping(t_address,t_struct(UintSet)11178_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:183"
          },
          {
            "label": "limitTradeHelper",
            "offset": 0,
            "slot": "169",
            "type": "t_contract(LimitTradeHelper)39496",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:185"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IEcoPyth)56582": {
            "label": "contract IEcoPyth",
            "numberOfBytes": "20"
          },
          "t_contract(LimitTradeHelper)39496": {
            "label": "contract LimitTradeHelper",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)38372_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ILimitTradeHandler.LimitOrder))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)11178_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LimitOrder)38372_storage)": {
            "label": "mapping(uint256 => struct ILimitTradeHandler.LimitOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(LimitOrder)38372_storage": {
            "label": "struct ILimitTradeHandler.LimitOrder",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tpToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "triggerAboveThreshold",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "reduceOnly",
                "type": "t_bool",
                "offset": 21,
                "slot": "1"
              },
              {
                "label": "sizeDelta",
                "type": "t_int256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "orderIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "marketIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "triggerPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "acceptablePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Set)10706_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)11178_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10706_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "6b2c2fbbf769bab01bf94e151ebb2b5d9f4d39e38724108c3a348f1a1f234bfa": {
      "address": "0xA4afc4b2ee640Bb6D6B87a0AC7348Ba6aEa57CF5",
      "txHash": "0xf0ca6d7f446d1b071ef51b796fb9e74fd520729dab7d7b9ac2bc5ff834ebef5a",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "liquidityService",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:93"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:94"
          },
          {
            "label": "nextExecutionOrderIndex",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:95"
          },
          {
            "label": "minExecutionOrderFee",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:96"
          },
          {
            "label": "maxExecutionChunk",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:97"
          },
          {
            "label": "liquidityOrders",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_struct(LiquidityOrder)38789_storage)dyn_storage",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:99"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:100"
          },
          {
            "label": "accountExecutedLiquidityOrders",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_array(t_struct(LiquidityOrder)38789_storage)dyn_storage)",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:101"
          },
          {
            "label": "hlpStaking",
            "offset": 0,
            "slot": "159",
            "type": "t_contract(ISurgeStaking)72554",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:103"
          },
          {
            "label": "isSurge",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:104"
          },
          {
            "label": "isNotAutoStake",
            "offset": 0,
            "slot": "161",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:105"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(LiquidityOrder)38789_storage)dyn_storage": {
            "label": "struct ILiquidityHandler.LiquidityOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ISurgeStaking)72554": {
            "label": "contract ISurgeStaking",
            "numberOfBytes": "20"
          },
          "t_enum(LiquidityOrderStatus)38763": {
            "label": "enum ILiquidityHandler.LiquidityOrderStatus",
            "members": [
              "PENDING",
              "SUCCESS",
              "FAIL"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(LiquidityOrder)38789_storage)dyn_storage)": {
            "label": "mapping(address => struct ILiquidityHandler.LiquidityOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(LiquidityOrder)38789_storage": {
            "label": "struct ILiquidityHandler.LiquidityOrder",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minOut",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "actualAmountOut",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "executedTimestamp",
                "type": "t_uint48",
                "offset": 26,
                "slot": "5"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "isAdd",
                "type": "t_bool",
                "offset": 20,
                "slot": "6"
              },
              {
                "label": "isNativeOut",
                "type": "t_bool",
                "offset": 21,
                "slot": "6"
              },
              {
                "label": "status",
                "type": "t_enum(LiquidityOrderStatus)38763",
                "offset": 22,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "e990c744fbc957ff5f2dade73d03312d9a2d8f9d8bad7ee660aa36c2cd435396": {
      "address": "0xc6Bc97069E5CF47a92F5370D8C643a47BBECF6A7",
      "txHash": "0xb1ed142d4a9a525fef046a94070e36dec997bc3ae4b537fe996409f233262744",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "101",
            "type": "t_contract(IVaultStorage)78791",
            "contract": "RebalanceHLPService",
            "src": "src/services/RebalanceHLPService.sol:22"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "102",
            "type": "t_contract(IConfigStorage)78204",
            "contract": "RebalanceHLPService",
            "src": "src/services/RebalanceHLPService.sol:23"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "103",
            "type": "t_contract(ICalculator)18887",
            "contract": "RebalanceHLPService",
            "src": "src/services/RebalanceHLPService.sol:24"
          },
          {
            "label": "switchRouter",
            "offset": 0,
            "slot": "104",
            "type": "t_contract(ISwitchCollateralRouter)20274",
            "contract": "RebalanceHLPService",
            "src": "src/services/RebalanceHLPService.sol:26"
          },
          {
            "label": "minHLPValueLossBPS",
            "offset": 20,
            "slot": "104",
            "type": "t_uint16",
            "contract": "RebalanceHLPService",
            "src": "src/services/RebalanceHLPService.sol:28"
          },
          {
            "label": "oneInchRouter",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "RebalanceHLPService",
            "src": "src/services/RebalanceHLPService.sol:31"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ICalculator)18887": {
            "label": "contract ICalculator",
            "numberOfBytes": "20"
          },
          "t_contract(IConfigStorage)78204": {
            "label": "contract IConfigStorage",
            "numberOfBytes": "20"
          },
          "t_contract(ISwitchCollateralRouter)20274": {
            "label": "contract ISwitchCollateralRouter",
            "numberOfBytes": "20"
          },
          "t_contract(IVaultStorage)78791": {
            "label": "contract IVaultStorage",
            "numberOfBytes": "20"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "02dbc960c84cc3cfda4aa7807433a1835edf8ec465f8670fd83278805864c5f5": {
      "address": "0x8F5176b87dB7A9C1058C8dE9a035a40205a259a9",
      "txHash": "0xd305f95a4918406a6ddaaceaa373f7e36ba59475fe6c01d1bbdcf73ef7e87ef0",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "service",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IRebalanceHLPService)68412",
            "contract": "RebalanceHLPHandler",
            "src": "src/handlers/RebalanceHLPHandler.sol:24"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(IVaultStorage)78791",
            "contract": "RebalanceHLPHandler",
            "src": "src/handlers/RebalanceHLPHandler.sol:25"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(IEcoPyth)56603",
            "contract": "RebalanceHLPHandler",
            "src": "src/handlers/RebalanceHLPHandler.sol:26"
          },
          {
            "label": "minHLPValueLossBPS",
            "offset": 20,
            "slot": "153",
            "type": "t_uint16",
            "contract": "RebalanceHLPHandler",
            "src": "src/handlers/RebalanceHLPHandler.sol:28"
          },
          {
            "label": "whitelistExecutors",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "RebalanceHLPHandler",
            "src": "src/handlers/RebalanceHLPHandler.sol:30"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IEcoPyth)56603": {
            "label": "contract IEcoPyth",
            "numberOfBytes": "20"
          },
          "t_contract(IRebalanceHLPService)68412": {
            "label": "contract IRebalanceHLPService",
            "numberOfBytes": "20"
          },
          "t_contract(IVaultStorage)78791": {
            "label": "contract IVaultStorage",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "fdb8e668afadc99184fe312d5df5a823b86b633f53adfcca5cd762c1e556782b": {
      "address": "0x462595db4E157Ee649D01D71DECd929d5F41C23E",
      "txHash": "0x2fbe8f0afd85c9a94d20bc7742270213ed2d26ebf7034471663728144a47f173",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "liquidityService",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:93"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:94"
          },
          {
            "label": "nextExecutionOrderIndex",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:95"
          },
          {
            "label": "minExecutionOrderFee",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:96"
          },
          {
            "label": "maxExecutionChunk",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:97"
          },
          {
            "label": "liquidityOrders",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_struct(LiquidityOrder)38768_storage)dyn_storage",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:99"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:100"
          },
          {
            "label": "accountExecutedLiquidityOrders",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_array(t_struct(LiquidityOrder)38768_storage)dyn_storage)",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:101"
          },
          {
            "label": "hlpStaking",
            "offset": 0,
            "slot": "159",
            "type": "t_contract(ISurgeStaking)72592",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:103"
          },
          {
            "label": "isSurge",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:104"
          },
          {
            "label": "isNotAutoStake",
            "offset": 0,
            "slot": "161",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:105"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(LiquidityOrder)38768_storage)dyn_storage": {
            "label": "struct ILiquidityHandler.LiquidityOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ISurgeStaking)72592": {
            "label": "contract ISurgeStaking",
            "numberOfBytes": "20"
          },
          "t_enum(LiquidityOrderStatus)38742": {
            "label": "enum ILiquidityHandler.LiquidityOrderStatus",
            "members": [
              "PENDING",
              "SUCCESS",
              "FAIL"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(LiquidityOrder)38768_storage)dyn_storage)": {
            "label": "mapping(address => struct ILiquidityHandler.LiquidityOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(LiquidityOrder)38768_storage": {
            "label": "struct ILiquidityHandler.LiquidityOrder",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minOut",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "actualAmountOut",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "executedTimestamp",
                "type": "t_uint48",
                "offset": 26,
                "slot": "5"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "isAdd",
                "type": "t_bool",
                "offset": 20,
                "slot": "6"
              },
              {
                "label": "isNativeOut",
                "type": "t_bool",
                "offset": 21,
                "slot": "6"
              },
              {
                "label": "status",
                "type": "t_enum(LiquidityOrderStatus)38742",
                "offset": 22,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "10b3184f1f6f4c99a7ba8dda23421fdd84fe33f2c28a4abfe3f78ad1d9c879c8": {
      "address": "0xC16007dF4C8cFe012D49F0d7192472f3d083dfC3",
      "txHash": "0x3d0ab9d3b6275cd67998277f62a317f9b88d6ee1e89667ee533a96eb63e680ea",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "tradingStaking",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "TradingStakingHook",
            "src": "src/staking/TradingStakingHook.sol:18"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "TradingStakingHook",
            "src": "src/staking/TradingStakingHook.sol:19"
          },
          {
            "label": "whitelistedCallers",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TradingStakingHook",
            "src": "src/staking/TradingStakingHook.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ad5bc9deeee2e48a80e9356db42e288fa7ff913c8044efff95e6026c0826fbb8": {
      "address": "0x0A583D01270d9278c9329cE4993A03923b82512A",
      "txHash": "0xad9dfff293dacd18c5c162ec8adcc970747e10b8f16bd73f1c3edd986981eb1a",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "TLCHook",
            "src": "src/staking/TLCHook.sol:23"
          },
          {
            "label": "tlc",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "TLCHook",
            "src": "src/staking/TLCHook.sol:24"
          },
          {
            "label": "tlcStaking",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "TLCHook",
            "src": "src/staking/TLCHook.sol:25"
          },
          {
            "label": "marketWeights",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "TLCHook",
            "src": "src/staking/TLCHook.sol:28"
          },
          {
            "label": "whitelistedCallers",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "TLCHook",
            "src": "src/staking/TLCHook.sol:29"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "f911d2e7fb79f1f261ac79c908be5212bdbcddccc59c5ebc8c0ca935bcff0675": {
      "address": "0x2D687493f800F4bb6b50188bd49989520dB75cB2",
      "txHash": "0x72431ba0e0c30242ec124c6f2a1ade978bbb2547143d18e945e7ec23014bf13c",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "crossMarginService",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:95"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:96"
          },
          {
            "label": "nextExecutionOrderIndex",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:97"
          },
          {
            "label": "minExecutionOrderFee",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:98"
          },
          {
            "label": "maxExecutionChuck",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:99"
          },
          {
            "label": "withdrawOrders",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_struct(WithdrawOrder)37547_storage)dyn_storage",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:101"
          },
          {
            "label": "subAccountExecutedWithdrawOrders",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_array(t_struct(WithdrawOrder)37547_storage)dyn_storage)",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:102"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "CrossMarginHandler",
            "src": "src/handlers/CrossMarginHandler.sol:103"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(WithdrawOrder)37547_storage)dyn_storage": {
            "label": "struct ICrossMarginHandler.WithdrawOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(CrossMarginService)60132": {
            "label": "contract CrossMarginService",
            "numberOfBytes": "20"
          },
          "t_enum(WithdrawOrderStatus)37522": {
            "label": "enum ICrossMarginHandler.WithdrawOrderStatus",
            "members": [
              "PENDING",
              "SUCCESS",
              "FAIL"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(WithdrawOrder)37547_storage)dyn_storage)": {
            "label": "mapping(address => struct ICrossMarginHandler.WithdrawOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(WithdrawOrder)37547_storage": {
            "label": "struct ICrossMarginHandler.WithdrawOrder",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint48",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "executedTimestamp",
                "type": "t_uint48",
                "offset": 6,
                "slot": "3"
              },
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 12,
                "slot": "3"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "crossMarginService",
                "type": "t_contract(CrossMarginService)60132",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "status",
                "type": "t_enum(WithdrawOrderStatus)37522",
                "offset": 21,
                "slot": "5"
              },
              {
                "label": "shouldUnwrap",
                "type": "t_bool",
                "offset": 22,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bf871e4f289612c63fe62ff287a0a05a8f31d1abd4b9c3d8a5f0e95f4378cfd1": {
      "address": "0x127FF41A3F3A5A03877D00e2393361cE8cD41AD1",
      "txHash": "0x7bcb3d6814bc129adf4e29291937224c0564ae6e8efc869df6062776a6842b8c",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(IEcoPyth)56622",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:162"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:163"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:164"
          },
          {
            "label": "senderOverride",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:165"
          },
          {
            "label": "minExecutionFee",
            "offset": 20,
            "slot": "154",
            "type": "t_uint64",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:167"
          },
          {
            "label": "minExecutionTimestamp",
            "offset": 28,
            "slot": "154",
            "type": "t_uint32",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:168"
          },
          {
            "label": "isAllowAllExecutor",
            "offset": 0,
            "slot": "155",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:169"
          },
          {
            "label": "isGuaranteeLimitPrice",
            "offset": 1,
            "slot": "155",
            "type": "t_bool",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:170"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:172"
          },
          {
            "label": "limitOrders",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)38404_storage))",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:173"
          },
          {
            "label": "limitOrdersIndex",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:174"
          },
          {
            "label": "delegations",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_address)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:175"
          },
          {
            "label": "activeOrderPointers",
            "offset": 0,
            "slot": "160",
            "type": "t_struct(UintSet)11178_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:178"
          },
          {
            "label": "activeMarketOrderPointers",
            "offset": 0,
            "slot": "162",
            "type": "t_struct(UintSet)11178_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:179"
          },
          {
            "label": "activeLimitOrderPointers",
            "offset": 0,
            "slot": "164",
            "type": "t_struct(UintSet)11178_storage",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:180"
          },
          {
            "label": "subAccountActiveOrderPointers",
            "offset": 0,
            "slot": "166",
            "type": "t_mapping(t_address,t_struct(UintSet)11178_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:182"
          },
          {
            "label": "subAccountActiveMarketOrderPointers",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_address,t_struct(UintSet)11178_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:183"
          },
          {
            "label": "subAccountActiveLimitOrderPointers",
            "offset": 0,
            "slot": "168",
            "type": "t_mapping(t_address,t_struct(UintSet)11178_storage)",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:184"
          },
          {
            "label": "limitTradeHelper",
            "offset": 0,
            "slot": "169",
            "type": "t_contract(LimitTradeHelper)39528",
            "contract": "LimitTradeHandler",
            "src": "src/handlers/LimitTradeHandler.sol:186"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IEcoPyth)56622": {
            "label": "contract IEcoPyth",
            "numberOfBytes": "20"
          },
          "t_contract(LimitTradeHelper)39528": {
            "label": "contract LimitTradeHelper",
            "numberOfBytes": "20"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(LimitOrder)38404_storage))": {
            "label": "mapping(address => mapping(uint256 => struct ILimitTradeHandler.LimitOrder))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)11178_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(LimitOrder)38404_storage)": {
            "label": "mapping(uint256 => struct ILimitTradeHandler.LimitOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(LimitOrder)38404_storage": {
            "label": "struct ILimitTradeHandler.LimitOrder",
            "members": [
              {
                "label": "account",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "tpToken",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "triggerAboveThreshold",
                "type": "t_bool",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "reduceOnly",
                "type": "t_bool",
                "offset": 21,
                "slot": "1"
              },
              {
                "label": "sizeDelta",
                "type": "t_int256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "orderIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "marketIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "triggerPrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "acceptablePrice",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              }
            ],
            "numberOfBytes": "320"
          },
          "t_struct(Set)10706_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)11178_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10706_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "73a39aff312ad7d1072fa14ca411ad12151ab602bd8ddb1008d26a271c781abb": {
      "address": "0x9eFe47a69D71Fbd3ccD5E38dEee3665102613e8E",
      "txHash": "0xd269d81af91a8e16381fad47cd0af3b491a707687d3ddfc83add635b65a9fdb3",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "liquidityService",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:94"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:95"
          },
          {
            "label": "nextExecutionOrderIndex",
            "offset": 0,
            "slot": "153",
            "type": "t_uint256",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:96"
          },
          {
            "label": "minExecutionOrderFee",
            "offset": 0,
            "slot": "154",
            "type": "t_uint256",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:97"
          },
          {
            "label": "maxExecutionChunk",
            "offset": 0,
            "slot": "155",
            "type": "t_uint256",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:98"
          },
          {
            "label": "liquidityOrders",
            "offset": 0,
            "slot": "156",
            "type": "t_array(t_struct(LiquidityOrder)38800_storage)dyn_storage",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:100"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:101"
          },
          {
            "label": "accountExecutedLiquidityOrders",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_array(t_struct(LiquidityOrder)38800_storage)dyn_storage)",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:102"
          },
          {
            "label": "hlpStaking",
            "offset": 0,
            "slot": "159",
            "type": "t_contract(ISurgeStaking)72632",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:104"
          },
          {
            "label": "isSurge",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:105"
          },
          {
            "label": "isNotAutoStake",
            "offset": 0,
            "slot": "161",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "LiquidityHandler",
            "src": "src/handlers/LiquidityHandler.sol:106"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(LiquidityOrder)38800_storage)dyn_storage": {
            "label": "struct ILiquidityHandler.LiquidityOrder[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ISurgeStaking)72632": {
            "label": "contract ISurgeStaking",
            "numberOfBytes": "20"
          },
          "t_enum(LiquidityOrderStatus)38774": {
            "label": "enum ILiquidityHandler.LiquidityOrderStatus",
            "members": [
              "PENDING",
              "SUCCESS",
              "FAIL"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(LiquidityOrder)38800_storage)dyn_storage)": {
            "label": "mapping(address => struct ILiquidityHandler.LiquidityOrder[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(LiquidityOrder)38800_storage": {
            "label": "struct ILiquidityHandler.LiquidityOrder",
            "members": [
              {
                "label": "orderId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "amount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minOut",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "actualAmountOut",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "executionFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "account",
                "type": "t_address_payable",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint48",
                "offset": 20,
                "slot": "5"
              },
              {
                "label": "executedTimestamp",
                "type": "t_uint48",
                "offset": 26,
                "slot": "5"
              },
              {
                "label": "token",
                "type": "t_address",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "isAdd",
                "type": "t_bool",
                "offset": 20,
                "slot": "6"
              },
              {
                "label": "isNativeOut",
                "type": "t_bool",
                "offset": 21,
                "slot": "6"
              },
              {
                "label": "status",
                "type": "t_enum(LiquidityOrderStatus)38774",
                "offset": 22,
                "slot": "6"
              }
            ],
            "numberOfBytes": "224"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8eeb6f4bf283d0d8e1366e46d3d0456e953998b8aa2561f2d9374162967e78da": {
      "address": "0xC4Fc80e7809587Be207735cbec6Dc48DB59C06BD",
      "txHash": "0x9d4e5085b5700c5a6d28d2d9482d63b02a69ff1347c654ed7a25d09d3fd063e2",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "crossMarginService",
            "offset": 0,
            "slot": "151",
            "type": "t_contract(CrossMarginService)60132",
            "contract": "Ext01Handler",
            "src": "src/handlers/Ext01Handler.sol:112"
          },
          {
            "label": "liquidationService",
            "offset": 0,
            "slot": "152",
            "type": "t_contract(LiquidationService)61784",
            "contract": "Ext01Handler",
            "src": "src/handlers/Ext01Handler.sol:113"
          },
          {
            "label": "liquidityService",
            "offset": 0,
            "slot": "153",
            "type": "t_contract(LiquidityService)62942",
            "contract": "Ext01Handler",
            "src": "src/handlers/Ext01Handler.sol:114"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(TradeService)68071",
            "contract": "Ext01Handler",
            "src": "src/handlers/Ext01Handler.sol:115"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(IEcoPyth)56622",
            "contract": "Ext01Handler",
            "src": "src/handlers/Ext01Handler.sol:116"
          },
          {
            "label": "_senderOverride",
            "offset": 0,
            "slot": "156",
            "type": "t_address",
            "contract": "Ext01Handler",
            "src": "src/handlers/Ext01Handler.sol:121"
          },
          {
            "label": "minExecutionOrderOf",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_uint24,t_uint128)",
            "contract": "Ext01Handler",
            "src": "src/handlers/Ext01Handler.sol:123"
          },
          {
            "label": "genericOrders",
            "offset": 0,
            "slot": "158",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(GenericOrder)37931_storage))",
            "contract": "Ext01Handler",
            "src": "src/handlers/Ext01Handler.sol:124"
          },
          {
            "label": "genericOrdersIndex",
            "offset": 0,
            "slot": "159",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Ext01Handler",
            "src": "src/handlers/Ext01Handler.sol:125"
          },
          {
            "label": "delegations",
            "offset": 0,
            "slot": "160",
            "type": "t_mapping(t_address,t_address)",
            "contract": "Ext01Handler",
            "src": "src/handlers/Ext01Handler.sol:126"
          },
          {
            "label": "_activeOrderPointers",
            "offset": 0,
            "slot": "161",
            "type": "t_struct(UintSet)11178_storage",
            "contract": "Ext01Handler",
            "src": "src/handlers/Ext01Handler.sol:129"
          },
          {
            "label": "_executedOrderPointers",
            "offset": 0,
            "slot": "163",
            "type": "t_struct(UintSet)11178_storage",
            "contract": "Ext01Handler",
            "src": "src/handlers/Ext01Handler.sol:130"
          },
          {
            "label": "_subAccountActiveOrderPointers",
            "offset": 0,
            "slot": "165",
            "type": "t_mapping(t_address,t_struct(UintSet)11178_storage)",
            "contract": "Ext01Handler",
            "src": "src/handlers/Ext01Handler.sol:131"
          },
          {
            "label": "_subAccountExecutedOrderPointers",
            "offset": 0,
            "slot": "166",
            "type": "t_mapping(t_address,t_struct(UintSet)11178_storage)",
            "contract": "Ext01Handler",
            "src": "src/handlers/Ext01Handler.sol:132"
          },
          {
            "label": "orderExecutors",
            "offset": 0,
            "slot": "167",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Ext01Handler",
            "src": "src/handlers/Ext01Handler.sol:134"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(CrossMarginService)60132": {
            "label": "contract CrossMarginService",
            "numberOfBytes": "20"
          },
          "t_contract(IEcoPyth)56622": {
            "label": "contract IEcoPyth",
            "numberOfBytes": "20"
          },
          "t_contract(LiquidationService)61784": {
            "label": "contract LiquidationService",
            "numberOfBytes": "20"
          },
          "t_contract(LiquidityService)62942": {
            "label": "contract LiquidityService",
            "numberOfBytes": "20"
          },
          "t_contract(TradeService)68071": {
            "label": "contract TradeService",
            "numberOfBytes": "20"
          },
          "t_enum(OrderStatus)37915": {
            "label": "enum IExt01Handler.OrderStatus",
            "members": [
              "PENDING",
              "SUCCESS",
              "FAIL"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(GenericOrder)37931_storage))": {
            "label": "mapping(address => mapping(uint256 => struct IExt01Handler.GenericOrder))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UintSet)11178_storage)": {
            "label": "mapping(address => struct EnumerableSet.UintSet)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint24,t_uint128)": {
            "label": "mapping(uint24 => uint128)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(GenericOrder)37931_storage)": {
            "label": "mapping(uint256 => struct IExt01Handler.GenericOrder)",
            "numberOfBytes": "32"
          },
          "t_struct(GenericOrder)37931_storage": {
            "label": "struct IExt01Handler.GenericOrder",
            "members": [
              {
                "label": "orderIndex",
                "type": "t_uint248",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "status",
                "type": "t_enum(OrderStatus)37915",
                "offset": 31,
                "slot": "0"
              },
              {
                "label": "createdTimestamp",
                "type": "t_uint48",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "executedTimestamp",
                "type": "t_uint48",
                "offset": 6,
                "slot": "1"
              },
              {
                "label": "orderType",
                "type": "t_uint24",
                "offset": 12,
                "slot": "1"
              },
              {
                "label": "executionFee",
                "type": "t_uint128",
                "offset": 15,
                "slot": "1"
              },
              {
                "label": "rawOrder",
                "type": "t_bytes_storage",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)10706_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UintSet)11178_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10706_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint24": {
            "label": "uint24",
            "numberOfBytes": "3"
          },
          "t_uint248": {
            "label": "uint248",
            "numberOfBytes": "31"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint48": {
            "label": "uint48",
            "numberOfBytes": "6"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8c8cdc24ba5747d0c680d703a96dbe701044a3bb01ce11a7eca5845e7b2fd76c": {
      "address": "0xBeA3dFE0c1c02D0c8b58A1f2CA6b047a7DC8C891",
      "txHash": "0x302aef289c40ccaf91172f8f3e0757ad2933c7b571b4946dc52263e0211f6353",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "liquidityConfig",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(LiquidityConfig)78754_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:65"
          },
          {
            "label": "swapConfig",
            "offset": 0,
            "slot": "103",
            "type": "t_struct(SwapConfig)78759_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:66"
          },
          {
            "label": "tradingConfig",
            "offset": 0,
            "slot": "104",
            "type": "t_struct(TradingConfig)78768_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:67"
          },
          {
            "label": "liquidationConfig",
            "offset": 0,
            "slot": "107",
            "type": "t_struct(LiquidationConfig)78771_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:68"
          },
          {
            "label": "allowedLiquidators",
            "offset": 0,
            "slot": "108",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:70"
          },
          {
            "label": "serviceExecutors",
            "offset": 0,
            "slot": "109",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:71"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "110",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:73"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "111",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:74"
          },
          {
            "label": "hlp",
            "offset": 0,
            "slot": "112",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:75"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "113",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:76"
          },
          {
            "label": "pnlFactorBPS",
            "offset": 20,
            "slot": "113",
            "type": "t_uint32",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:77"
          },
          {
            "label": "minimumPositionSize",
            "offset": 0,
            "slot": "114",
            "type": "t_uint256",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:78"
          },
          {
            "label": "weth",
            "offset": 0,
            "slot": "115",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:79"
          },
          {
            "label": "sglp",
            "offset": 0,
            "slot": "116",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:80"
          },
          {
            "label": "tokenAssetIds",
            "offset": 0,
            "slot": "117",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:83"
          },
          {
            "label": "assetConfigs",
            "offset": 0,
            "slot": "118",
            "type": "t_mapping(t_bytes32,t_struct(AssetConfig)78685_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:85"
          },
          {
            "label": "hlpAssetIds",
            "offset": 0,
            "slot": "119",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:87"
          },
          {
            "label": "assetHlpTokenConfigs",
            "offset": 0,
            "slot": "120",
            "type": "t_mapping(t_bytes32,t_struct(HLPTokenConfig)78694_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:88"
          },
          {
            "label": "collateralAssetIds",
            "offset": 0,
            "slot": "121",
            "type": "t_array(t_bytes32)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:90"
          },
          {
            "label": "assetCollateralTokenConfigs",
            "offset": 0,
            "slot": "122",
            "type": "t_mapping(t_bytes32,t_struct(CollateralTokenConfig)78701_storage)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:91"
          },
          {
            "label": "marketConfigs",
            "offset": 0,
            "slot": "123",
            "type": "t_array(t_struct(MarketConfig)78732_storage)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:93"
          },
          {
            "label": "assetClassConfigs",
            "offset": 0,
            "slot": "124",
            "type": "t_array(t_struct(AssetClassConfig)78735_storage)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:94"
          },
          {
            "label": "tradeServiceHooks",
            "offset": 0,
            "slot": "125",
            "type": "t_array(t_address)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:95"
          },
          {
            "label": "configExecutors",
            "offset": 0,
            "slot": "126",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:97"
          },
          {
            "label": "switchCollateralRouter",
            "offset": 0,
            "slot": "127",
            "type": "t_address",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:99"
          },
          {
            "label": "minProfitDurations",
            "offset": 0,
            "slot": "128",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:101"
          },
          {
            "label": "isAdaptiveFeeEnabledByMarketIndex",
            "offset": 0,
            "slot": "129",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:103"
          },
          {
            "label": "ybTokenOf",
            "offset": 0,
            "slot": "130",
            "type": "t_mapping(t_address,t_address)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:105"
          },
          {
            "label": "stepMinProfitDurations",
            "offset": 0,
            "slot": "131",
            "type": "t_array(t_struct(StepMinProfitDuration)78778_storage)dyn_storage",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:107"
          },
          {
            "label": "isStepMinProfitEnabledByMarketIndex",
            "offset": 0,
            "slot": "132",
            "type": "t_mapping(t_uint256,t_bool)",
            "contract": "ConfigStorage",
            "src": "src/storages/ConfigStorage.sol:108"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(AssetClassConfig)78735_storage)dyn_storage": {
            "label": "struct IConfigStorage.AssetClassConfig[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(MarketConfig)78732_storage)dyn_storage": {
            "label": "struct IConfigStorage.MarketConfig[]",
            "numberOfBytes": "32"
          },
          "t_array(t_struct(StepMinProfitDuration)78778_storage)dyn_storage": {
            "label": "struct IConfigStorage.StepMinProfitDuration[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(AssetConfig)78685_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.AssetConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(CollateralTokenConfig)78701_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.CollateralTokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(HLPTokenConfig)78694_storage)": {
            "label": "mapping(bytes32 => struct IConfigStorage.HLPTokenConfig)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AssetClassConfig)78735_storage": {
            "label": "struct IConfigStorage.AssetClassConfig",
            "members": [
              {
                "label": "baseBorrowingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(AssetConfig)78685_storage": {
            "label": "struct IConfigStorage.AssetConfig",
            "members": [
              {
                "label": "tokenAddress",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "assetId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "decimals",
                "type": "t_uint8",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isStableCoin",
                "type": "t_bool",
                "offset": 1,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(CollateralTokenConfig)78701_storage": {
            "label": "struct IConfigStorage.CollateralTokenConfig",
            "members": [
              {
                "label": "settleStrategy",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "collateralFactorBPS",
                "type": "t_uint32",
                "offset": 20,
                "slot": "0"
              },
              {
                "label": "accepted",
                "type": "t_bool",
                "offset": 24,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(FundingRate)78706_storage": {
            "label": "struct IConfigStorage.FundingRate",
            "members": [
              {
                "label": "maxSkewScaleUSD",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxFundingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(HLPTokenConfig)78694_storage": {
            "label": "struct IConfigStorage.HLPTokenConfig",
            "members": [
              {
                "label": "targetWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "bufferLiquidity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxWeightDiff",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "accepted",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(LiquidationConfig)78771_storage": {
            "label": "struct IConfigStorage.LiquidationConfig",
            "members": [
              {
                "label": "liquidationFeeUSDE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(LiquidityConfig)78754_storage": {
            "label": "struct IConfigStorage.LiquidityConfig",
            "members": [
              {
                "label": "hlpTotalTokenWeight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "hlpSafetyBufferBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "taxFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "1"
              },
              {
                "label": "flashLoanFeeRateBPS",
                "type": "t_uint32",
                "offset": 8,
                "slot": "1"
              },
              {
                "label": "maxHLPUtilizationBPS",
                "type": "t_uint32",
                "offset": 12,
                "slot": "1"
              },
              {
                "label": "depositFeeRateBPS",
                "type": "t_uint32",
                "offset": 16,
                "slot": "1"
              },
              {
                "label": "withdrawFeeRateBPS",
                "type": "t_uint32",
                "offset": 20,
                "slot": "1"
              },
              {
                "label": "dynamicFeeEnabled",
                "type": "t_bool",
                "offset": 24,
                "slot": "1"
              },
              {
                "label": "enabled",
                "type": "t_bool",
                "offset": 25,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(MarketConfig)78732_storage": {
            "label": "struct IConfigStorage.MarketConfig",
            "members": [
              {
                "label": "assetId",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "maxLongPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "maxShortPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "increasePositionFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "decreasePositionFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "3"
              },
              {
                "label": "initialMarginFractionBPS",
                "type": "t_uint32",
                "offset": 8,
                "slot": "3"
              },
              {
                "label": "maintenanceMarginFractionBPS",
                "type": "t_uint32",
                "offset": 12,
                "slot": "3"
              },
              {
                "label": "maxProfitRateBPS",
                "type": "t_uint32",
                "offset": 16,
                "slot": "3"
              },
              {
                "label": "assetClass",
                "type": "t_uint8",
                "offset": 20,
                "slot": "3"
              },
              {
                "label": "allowIncreasePosition",
                "type": "t_bool",
                "offset": 21,
                "slot": "3"
              },
              {
                "label": "active",
                "type": "t_bool",
                "offset": 22,
                "slot": "3"
              },
              {
                "label": "fundingRate",
                "type": "t_struct(FundingRate)78706_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(StepMinProfitDuration)78778_storage": {
            "label": "struct IConfigStorage.StepMinProfitDuration",
            "members": [
              {
                "label": "fromSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "toSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "minProfitDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(SwapConfig)78759_storage": {
            "label": "struct IConfigStorage.SwapConfig",
            "members": [
              {
                "label": "stablecoinSwapFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "swapFeeRateBPS",
                "type": "t_uint32",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(TradingConfig)78768_storage": {
            "label": "struct IConfigStorage.TradingConfig",
            "members": [
              {
                "label": "fundingInterval",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "minProfitDuration",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "devFeeRateBPS",
                "type": "t_uint32",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "maxPosition",
                "type": "t_uint8",
                "offset": 4,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "780251328c432985234f73a0cc34d0edac4b510cdab837d7ada965f69c7be929": {
      "address": "0xB11d04F75752D1a73F0414E13df852876B9c4B8c",
      "txHash": "0x3251ce5fddcfdefb60b8a2f4008c96065b4c388caadc035cdf57fe38104076a9",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "globalState",
            "offset": 0,
            "slot": "151",
            "type": "t_struct(GlobalState)79250_storage",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:36"
          },
          {
            "label": "positions",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_struct(Position)79307_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:38"
          },
          {
            "label": "subAccountPositionIds",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:39"
          },
          {
            "label": "subAccountBorrowingFee",
            "offset": 0,
            "slot": "154",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:40"
          },
          {
            "label": "markets",
            "offset": 0,
            "slot": "155",
            "type": "t_mapping(t_uint256,t_struct(Market)79284_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:41"
          },
          {
            "label": "assetClasses",
            "offset": 0,
            "slot": "156",
            "type": "t_mapping(t_uint256,t_struct(AssetClass)79261_storage)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:42"
          },
          {
            "label": "serviceExecutors",
            "offset": 0,
            "slot": "157",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:43"
          },
          {
            "label": "activePositionIds",
            "offset": 0,
            "slot": "158",
            "type": "t_struct(Bytes32Set)10900_storage",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:45"
          },
          {
            "label": "activeSubAccounts",
            "offset": 0,
            "slot": "160",
            "type": "t_struct(AddressSet)11021_storage",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:46"
          },
          {
            "label": "epochVolumeBuy",
            "offset": 0,
            "slot": "162",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:48"
          },
          {
            "label": "epochVolumeSell",
            "offset": 0,
            "slot": "163",
            "type": "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:49"
          },
          {
            "label": "movingWindowLength",
            "offset": 0,
            "slot": "164",
            "type": "t_uint256",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:50"
          },
          {
            "label": "movingWindowInterval",
            "offset": 0,
            "slot": "165",
            "type": "t_uint256",
            "contract": "PerpStorage",
            "src": "src/storages/PerpStorage.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_int256": {
            "label": "int256",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
            "label": "mapping(address => bytes32[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(Position)79307_storage)": {
            "label": "mapping(bytes32 => struct IPerpStorage.Position)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(uint256 => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(AssetClass)79261_storage)": {
            "label": "mapping(uint256 => struct IPerpStorage.AssetClass)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Market)79284_storage)": {
            "label": "mapping(uint256 => struct IPerpStorage.Market)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)11021_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10706_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(AssetClass)79261_storage": {
            "label": "struct IPerpStorage.AssetClass",
            "members": [
              {
                "label": "reserveValueE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "sumBorrowingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastBorrowingTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "sumBorrowingFeeE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "sumSettledBorrowingFeeE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(Bytes32Set)10900_storage": {
            "label": "struct EnumerableSet.Bytes32Set",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)10706_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(GlobalState)79250_storage": {
            "label": "struct IPerpStorage.GlobalState",
            "members": [
              {
                "label": "reserveValueE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Market)79284_storage": {
            "label": "struct IPerpStorage.Market",
            "members": [
              {
                "label": "longPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "longAccumSE",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "longAccumS2E",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "shortPositionSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "shortAccumSE",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "shortAccumS2E",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "currentFundingRate",
                "type": "t_int256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "lastFundingTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "accumFundingLong",
                "type": "t_int256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "accumFundingShort",
                "type": "t_int256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "fundingAccrued",
                "type": "t_int256",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Position)79307_storage": {
            "label": "struct IPerpStorage.Position",
            "members": [
              {
                "label": "primaryAccount",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "marketIndex",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "avgEntryPriceE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "entryBorrowingRate",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "reserveValueE30",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "lastIncreaseTimestamp",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "positionSizeE30",
                "type": "t_int256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "realizedPnl",
                "type": "t_int256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "lastFundingAccrued",
                "type": "t_int256",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "subAccountId",
                "type": "t_uint8",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "lastIncreaseSize",
                "type": "t_uint256",
                "offset": 0,
                "slot": "10"
              }
            ],
            "numberOfBytes": "352"
          },
          "t_struct(Set)10706_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "bd8e985ddb687e7bb25bb888cd49e826fa7823088dd23397228df3506438aa83": {
      "address": "0x2Ef90f58d8970B5EB8cCd8586e156B31D8866Dab",
      "txHash": "0x14146415eb413eb85cbec6accd36b7608ac8be5d9f2cde23a2125355ae2ed6ee",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:85"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:86"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:87"
          },
          {
            "label": "tradeHelper",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:88"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(Calculator)18251",
            "contract": "LiquidationService",
            "src": "src/services/LiquidationService.sol:89"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(Calculator)18251": {
            "label": "contract Calculator",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "4145c5d1528c118b7a64c0338bdd37c6398994232a180733f634ff4fecc96cc5": {
      "address": "0xa4645e24730eFE333b0ab6669eb6432c98C4B25D",
      "txHash": "0x965ed54a1176222fba8c621f7b434870fbf008c33086cf7982bb6d16679528c8",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:172"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:173"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:174"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "154",
            "type": "t_contract(Calculator)18251",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:175"
          },
          {
            "label": "orderbookOracle",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(OrderbookOracle)53699",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:176"
          },
          {
            "label": "adaptiveFeeCalculator",
            "offset": 0,
            "slot": "156",
            "type": "t_contract(AdaptiveFeeCalculator)14194",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:177"
          },
          {
            "label": "maxAdaptiveFeeBps",
            "offset": 20,
            "slot": "156",
            "type": "t_uint32",
            "contract": "TradeHelper",
            "src": "src/helpers/TradeHelper.sol:178"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(AdaptiveFeeCalculator)14194": {
            "label": "contract AdaptiveFeeCalculator",
            "numberOfBytes": "20"
          },
          "t_contract(Calculator)18251": {
            "label": "contract Calculator",
            "numberOfBytes": "20"
          },
          "t_contract(OrderbookOracle)53699": {
            "label": "contract OrderbookOracle",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "a23c6d35e0808474c0d6c4a5f2c50bae1fe83d85861341b973b8b3b6d2393297": {
      "address": "0xF6B58AD755f33393aD0dca814c1D2E1Be1EE515b",
      "txHash": "0x1aa4765b658ce4932f8b639d3ea9366c18d6625d01cc98f6e35de1bd425aa27f",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:173"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:174"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:175"
          },
          {
            "label": "tradeHelper",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:176"
          },
          {
            "label": "calculator",
            "offset": 0,
            "slot": "155",
            "type": "t_contract(ICalculator)19194",
            "contract": "TradeService",
            "src": "src/services/TradeService.sol:177"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(ICalculator)19194": {
            "label": "contract ICalculator",
            "numberOfBytes": "20"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "205495793199e4121f168a254eb509d30bac16230ba6d7a418eb618299351a89": {
      "address": "0xE4db31d3108C49e8183764b963715e75236cF9ce",
      "txHash": "0x1d5f19562faeaca87a4be880ea6afc8fc9fc7cdf4f68caaf96b7da97927356a0",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol:80"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "positionManagers",
            "offset": 0,
            "slot": "151",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:74"
          },
          {
            "label": "tradeService",
            "offset": 0,
            "slot": "152",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:75"
          },
          {
            "label": "liquidationService",
            "offset": 0,
            "slot": "153",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:76"
          },
          {
            "label": "crossMarginService",
            "offset": 0,
            "slot": "154",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:77"
          },
          {
            "label": "pyth",
            "offset": 0,
            "slot": "155",
            "type": "t_address",
            "contract": "BotHandler",
            "src": "src/handlers/BotHandler.sol:78"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "52daf65d141507ab5e61d432661fec8262298cc38c61544a8e904ce324a59c45": {
      "address": "0x5a9E8967B469c01344b3c6f2ABc89DC64f930e32",
      "txHash": "0xf88e92e9c42ded967f0e1c890dd617f9e41718e7933d54f4e52fe6057cf1e66b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "oracle",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:46"
          },
          {
            "label": "vaultStorage",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:47"
          },
          {
            "label": "configStorage",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:48"
          },
          {
            "label": "perpStorage",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:49"
          },
          {
            "label": "tradeHelper",
            "offset": 0,
            "slot": "105",
            "type": "t_address",
            "contract": "Calculator",
            "src": "src/contracts/Calculator.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
